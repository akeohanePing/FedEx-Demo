{"ast":null,"code":"import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/** \nPING INTEGRATION:\nThis entire component is Ping-developed.\nImplements functions to integrate with PingFederate\nauthentication-related API endpoints.\n\n@author Michael Sanchez\n*/var PingAuthN=/*#__PURE__*/function(){function PingAuthN(){_classCallCheck(this,PingAuthN);this.pfAuthnAPIURI=\"/pf-ws/authn/flows/\";this.pfPickupURI=\"/ext/ref/pickup?REF=\";}_createClass(PingAuthN,[{key:\"authnAPI\",/** \n    AuthN API:\n    Authenticating user with AuthN API.\n\n    @param {string} method The HTTP request verb.\n    @param {string} flowId The flowId from the initiated AuthN API response.\n    @param {string} contentType The content type required for the submitted payload.\n    @param {object} body The payload to send in the API body in JSON format.\n    @return {object} The response JSON object.\n    */value:function authnAPI(_ref){var method=_ref.method,flowId=_ref.flowId,contentType=_ref.contentType,payload=_ref.payload,action=_ref.action;console.info(\"PingAuthN.js\",\"Authenticating user with authN API.\");var headers=new Headers();headers.append('Accept','application/json');headers.append('X-XSRF-Header','PingFederate');if(contentType!==undefined){headers.append('Content-Type',contentType);}var requestOptions={headers:headers,method:method,body:payload,credentials:'include'};var url=this.pfAuthnAPIURI+flowId;if(action!==undefined){url+=\"?action=\"+action;}return fetch(url,requestOptions);}/** \n    Handle AuthN Flow:\n    Handler for different AuthN API flows. UI components shouldn't deal with\n    API calls. They just need to know about the user and what their next move is.\n\n    @param {object} flowResponse The response object in JSON format.\n    @param {string} identifier The userName or email of the authenticating user.\n    @param {string} swaprods The user's password if doing password authentication.\n    */},{key:\"handleAuthNflow\",value:function handleAuthNflow(_ref2){var flowId=_ref2.flowId,flowResponse=_ref2.flowResponse,swaprods=_ref2.swaprods,rememberMe=_ref2.rememberMe,body=_ref2.body;console.info(\"PingAuthN.js\",\"Handling flow response from authN API.\");console.info(\"FlowResponse was\",JSON.stringify(flowResponse));var payload='{}';if(!flowResponse){flowResponse={};}//This won't exist if we only get a flowId. So create it to let switch/case default kick in.\nswitch(flowResponse.status){case\"IDENTIFIER_REQUIRED\":console.info(\"PingAuthN.js\",\"IDENTIFIER_REQUIRED\");payload='{\\n  \\\"identifier\\\": \\\"'+body+'\\\"\\n}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,contentType:\"application/vnd.pingidentity.submitIdentifier+json\",payload:payload});break;case\"USERNAME_PASSWORD_REQUIRED\":console.info(\"PingAuthN.js\",\"USERNAME_PASSWORD_REQUIRED\");payload='{\\n \\\"username\\\": \\\"'+flowResponse.username+'\\\", \\\"password\\\": \\\"'+swaprods+'\\\", \\\"rememberMyUsername\\\": \\\"'+rememberMe+'\\\", \\\"captchaResponse\\\": \\\"\\\" \\n}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,contentType:\"application/vnd.pingidentity.checkUsernamePassword+json\",payload:payload});break;case\"AUTHENTICATION_REQUIRED\":console.info(\"PingAuthN.js\",\"AUTHENTICATION_REQUIRED\");payload='{'+body+'}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,contentType:\"application/vnd.pingidentity.authenticate+json\",payload:payload});break;case\"DEVICE_SELECTION_REQUIRED\":console.info(\"PingAuthN.js\",\"DEVICE_SELECTION_REQUIRED\");payload='{\\n \\\"deviceRef\\\": {\\n \\\"id\\\":\\\"'+body+'\\\" \\n} \\n}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,payload:payload,action:\"selectDevice\"});break;case\"OTP_REQUIRED\":console.info(\"PingAuthN.js\",\"OTP_REQUIRED\");payload='{\\n \\\"otp\\\": \\\"'+body+'\\\" \\n}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,payload:payload,action:\"checkOtp\"});break;// this case is a placeholder for mobile push. Needs to be updated.\ncase\"PUSH_CONFIRMATION_WAITING\":console.info(\"PingAuthN.js\",\"fubar_REQUIRED\");return this.authnAPI({method:\"POST\",flowId:flowResponse.id,action:\"poll\"});break;case\"MFA_COMPLETED\":console.info(\"PingAuthN.js\",\"MFA_COMPLETED\");payload='{'+body+'}';return this.authnAPI({method:\"POST\",flowId:flowResponse.id,payload:payload,action:\"continueAuthentication\"});break;case\"DEVICE_PROFILE_REQUIRED\":console.info(\"PingAuthN.js\",\"DEVICE_PROFILE_REQUIRED\");console.info(\"Device Profile\",body);payload=body;return this.authnAPI({method:\"POST\",flowId:flowResponse.id,payload:payload,action:\"submitDeviceProfile\"});break;case\"RESUME\":console.info(\"PingAuthN.js\",\"Authentication complete. Redirecting to resumeURL.\");window.location.assign(flowResponse.resumeUrl);break;case\"FAILED\":console.warn(\"PingAuthN.js\",flowResponse.message);return flowResponse;default:// Just started the authN API flow, only have a flowId.\nconsole.info(\"PingAuthN.js\",\"Starting authN API flow.\");return this.authnAPI({method:\"GET\",flowId:flowId});}}/** \n    Pick Up API:\n    Agentless Integration Kit Pickup endpoint.\n\n    @param {string} REF The ref Id returned with the authenticated user.\n    @return {object} The response JSON object.\n    */},{key:\"pickUpAPI\",value:function pickUpAPI(REF,adapter){console.info(\"PingAuthN.js\",\"Attribute pickup from Agentless IK.\");var refId=REF;var myHeaders=new Headers();myHeaders.append(\"ping.instanceid\",adapter);myHeaders.append(\"Authorization\",\"Basic cmVhY3QtdXNlcjoyRmVkZXJhdGVNMHJl\");/* TODO should we obfuscate somehow. */var requestOptions={method:'POST',headers:myHeaders,credentials:'include'};var url=this.pfPickupURI+refId;return fetch(url,requestOptions);}}]);return PingAuthN;}();export default PingAuthN;","map":null,"metadata":{},"sourceType":"module"}