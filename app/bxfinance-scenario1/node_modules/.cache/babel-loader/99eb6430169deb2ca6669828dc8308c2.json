{"ast":null,"code":"import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Container}from'reactstrap';// Components\nimport NavbarMain from'../components/NavbarMain';import WelcomeBar from'../components/WelcomeBar';import FooterMain from'../components/FooterMain';import AccountsSubnav from'../components/AccountsSubnav';import AccountsDropdown from'../components/AccountsDropdown';import AccountsBalance from'../components/AccountsBalance';import CardRewards from'../components/CardRewards';import Session from'../components/Utils/Session';/* PING INTEGRATION */import PingData from'../components/Integration/PingData';/* PING INTEGRATION */import JSONSearch from'../components/Utils/JSONSearch';/* PING INTEGRATION */import PingOAuth from'../components/Integration/PingOAuth';/* PING INTEGRATION: */import OpenBanking from'../components/Integration/OpenBanking';/* PING INTEGRATION: */ // Data\nimport data from'../data/accounts-dashboard.json';// Styles\nimport\"../styles/pages/accounts.scss\";var AccountsDashboard=/*#__PURE__*/function(_React$Component){_inherits(AccountsDashboard,_React$Component);var _super=_createSuper(AccountsDashboard);function AccountsDashboard(){var _this;_classCallCheck(this,AccountsDashboard);_this=_super.call(this);/* BEGIN PING INTEGRATION: */_this.Session=new Session();_this.PingData=new PingData();_this.JSONSearch=new JSONSearch();_this.PingOAuth=new PingOAuth();_this.OpenBanking=new OpenBanking();_this.state={myAccounts:[]};/* END PING INTEGRATION: */return _this;}/* BEGIN PING INTEGRATION: */_createClass(AccountsDashboard,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var acctIDsArr=[];var acctIDsArrSimple=[];this.PingData.getUserEntry(this.Session.getAuthenticatedUserItem(\"uid\")).then(function(response){return response.json();}).then(function(jsonData){acctIDsArr=_this2.JSONSearch.findValues(jsonData,\"bxFinanceUserAccountIDs\");acctIDsArrSimple=_this2.JSONSearch.findValues(acctIDsArr,\"ids\");_this2.Session.setAuthenticatedUserItem(\"accts\",acctIDsArrSimple[0]);//TODO we can re-use this to save the getUserEntry() call. Only call PD if accts not in session.\nif(acctIDsArr.length){// Existing user with accounts already provisioned, so just get balances.\nconsole.info(\"Existing user:\",\"Getting account balances.\");_this2.PingOAuth.getToken({uid:_this2.Session.getAuthenticatedUserItem(\"uid\"),scopes:'urn:pingdirectory:consent'}).then(function(token){_this2.Session.setAuthenticatedUserItem(\"AT\",token);//TODO need to re-use this token everywhere to avoid multiple getToken calls. Need handling for expired tokens though.\n_this2.OpenBanking.getAccountBalances(token).then(function(response){return response.json();}).then(function(jsonData){_this2.setState({myAccounts:jsonData.Data.Balance});}).catch(function(e){console.error(\"GetAccountBalances Exception\",e);});}).catch(function(e){console.error(\"GetToken Exception\",e);});}else{// Brand new registered user, so we need to provision accounts and update PD, then fetch balances.\nvar acctIdsArr=[];console.info(\"New User:\",\"Provisioning bank accounts and getting balances.\");_this2.PingOAuth.getToken({uid:_this2.Session.getAuthenticatedUserItem(\"uid\"),scopes:'urn:pingdirectory:consent'}).then(function(token){_this2.Session.setAuthenticatedUserItem(\"AT\",token);_this2.OpenBanking.provisionAccounts(token).then(function(result){acctIdsArr=_this2.JSONSearch.findValues(result,\"AccountId\");_this2.PingData.updateUserEntry(acctIdsArr,_this2.Session.getAuthenticatedUserItem(\"uid\")).then(function(response){_this2.OpenBanking.getAccountBalances(_this2.Session.getAuthenticatedUserItem(\"AT\")).then(function(response){return response.json();}).then(function(jsonData){_this2.setState({myAccounts:jsonData.Data.Balance});acctIDsArr=_this2.JSONSearch.findValues(jsonData.Data.Balance,\"AccountId\");_this2.Session.setAuthenticatedUserItem(\"accts\",acctIDsArr);//TODO can we reuse this? Are we anywhere already?\n}).catch(function(e){console.error(\"Get Account Balances Exception\",e);});}).catch(function(e){console.error(\"Update User Entry Exception\",e);});}).catch(function(e){console.error(\"Provision Accounts Exception\",e);});}).catch(function(e){console.error(\"Get Token Exception\",e);});}}).catch(function(e){console.error(\"Get User Entry Exception\",e);});}/* END PING INTEGRATION: */},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"accounts accounts-dashboard\"},/*#__PURE__*/React.createElement(NavbarMain,null),/*#__PURE__*/React.createElement(WelcomeBar,{firstName:this.Session.getAuthenticatedUserItem('firstName')}),\" \",/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"inner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},Object.keys(data.subnav).map(function(key){return/*#__PURE__*/React.createElement(AccountsSubnav,{key:data.subnav[key].title,subnav:data.subnav[key]});}),/*#__PURE__*/React.createElement(CardRewards,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accounts-hdr\"},/*#__PURE__*/React.createElement(\"h1\",null,data.title),/*#__PURE__*/React.createElement(AccountsDropdown,{text:data.dropdown})),Object.keys(data.balances).map(function(key){return/*#__PURE__*/React.createElement(AccountsBalance,{key:data.balances[key].title,balance:data.balances[key],myAccounts:_this3.state.myAccounts});})))),/*#__PURE__*/React.createElement(FooterMain,null));}}]);return AccountsDashboard;}(React.Component);export default AccountsDashboard;","map":null,"metadata":{},"sourceType":"module"}