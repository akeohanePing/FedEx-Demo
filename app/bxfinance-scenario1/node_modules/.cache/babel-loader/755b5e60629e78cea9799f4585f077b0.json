{"ast":null,"code":"import _defineProperty from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// Packages\nimport React from'react';import{Collapse,Container,Navbar,NavbarToggler,Nav,NavItem,NavLink}from'reactstrap';import{Link,NavLink as RRNavLink}from'react-router-dom';import Checkbox from'@material-ui/core/Checkbox';import FormControlLabel from'@material-ui/core/FormControlLabel';import TextField from'@material-ui/core/TextField';import Divider from'@material-ui/core/Divider';// Components\nimport ModalRegister from'../ModalRegister';import ModalRegisterConfirm from'../ModalRegisterConfirm';import ModalLogin from'../ModalLogin';import PingAuthN from'../Integration/PingAuthN';/* PING INTEGRATION */import Session from'../Utils/Session';/* PING INTEGRATION */import ModalError from'../ModalError';/* PING INTEGRATION: */import'./NavbarMain.scss';import IdleTimer from'react-idle-timer';/* PING INTEGRATION: */import{IdleTimeOutModal}from'../ModalTimeout/IdleTimeOutModal';/* PING INTEGRATION: */ // Data\nimport data from'./data.json';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';import KeyboardArrowDown from'@material-ui/icons/KeyboardArrowDown';import AccountCircle from'@material-ui/icons/AccountCircleOutlined';import Search from'@material-ui/icons/Search';import logo from'./fedExLogo.png';import{withStyles}from\"@material-ui/core/styles\";import Menu from'@material-ui/core/Menu';import MenuItem from'@material-ui/core/MenuItem';var menuItems=[{heading:\"My Profile\",onCick:'changePage'},{heading:\"Administrative Tools\",onCick:'test2'},{heading:\"Email Preferences\",onCick:null},{heading:\"Address Book\",onCick:null},{heading:\"View & Pay Bill\",onCick:null},{heading:\"Reporting\",onCick:null},{heading:\"Sign Out\",onCick:null,customClass:\"signOutMenuItem\"}];var styles=function styles(theme){return{root:{flexGrow:1,width:'100vw',padding:0},menuButton:{marginRight:theme.spacing(2),height:\"30px !important\",fontSize:\"30px !important\"},title:{flexGrow:1}};};var NavbarMain=/*#__PURE__*/function(_React$Component){_inherits(NavbarMain,_React$Component);var _super=_createSuper(NavbarMain);function NavbarMain(props){var _this;_classCallCheck(this,NavbarMain);_this=_super.call(this,props);_this.toggleMenu=function(event){_this.setState({navMenuOpen:!_this.state.navMenuOpen,anchorEl:event.currentTarget});};_this.state={isOpen:false,loggedOut:true,/* PING INTEGRATION: */timeout:1000*60*30,/* PING INTEGRATION: for react-idle-timer */showTimeoutModal:false,/* PING INTEGRATION: for react-idle-timer */isTimedOut:false,/* PING INTEGRATION: for react-idle-timer */navMenuOpen:false,anchorEl:null};/* BEGIN PING INTEGRATION: */_this.PingAuthN=new PingAuthN();_this.Session=new Session();_this.IdleTimer=null;_this.onAction=_this._onAction.bind(_assertThisInitialized(_this));/* PING INTEGRATION: for react-idle-timer */_this.onActive=_this._onActive.bind(_assertThisInitialized(_this));/* PING INTEGRATION: for react-idle-timer */_this.onIdle=_this._onIdle.bind(_assertThisInitialized(_this));/* PING INTEGRATION: for react-idle-timer */_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));_this.handleLogout=_this.handleLogout.bind(_assertThisInitialized(_this));_this.startSSOURI=\"/idp/startSSO.ping?PartnerSpId=\"+process.env.REACT_APP_HOST;//The TargetResource param for registration is set to the startSSO endpoint to after reg we immediately trigger a login flow for better UX.\n_this.pfRegURI=\"/sp/startSSO.ping?SpSessionAuthnAdapterId=idprofiledefaultIdentityProfile&TargetResource=\"+process.env.REACT_APP_HOST+_this.startSSOURI+\"&PolicyAction=identity.registration\";/* END PING INTEGRATION: */return _this;}/* BEGIN PING INTEGRATION: for react-idle-timer */_createClass(NavbarMain,[{key:\"_onAction\",value:function _onAction(e){// console.info(\"React-idle-timer\", 'user did something', e);\nthis.setState({isTimedOut:false});}},{key:\"_onActive\",value:function _onActive(e){console.info(\"React-idle-timer\",'user is active',e);this.setState({isTimedOut:false});}},{key:\"_onIdle\",value:function _onIdle(e){console.info(\"React-idle-timer\",'user is idle',e);// const isTimedOut = this.state.isTimedOut;\nif(this.state.isTimedOut){this.startSLO();}else{this.setState({showTimeoutModal:true,isTimedOut:true});this.IdleTimer.reset();}}},{key:\"handleClose\",value:function handleClose(){console.info(\"We are closing the timeout modal.\");this.setState({showTimeoutModal:false});window.location.assign(this.startSSOURI);//TODO we Send back through PF to renew the session. This should be done via API.\n}},{key:\"handleLogout\",value:function handleLogout(){console.info(\"We are logging out from the timeout modal.\");this.startSLO();}/* END PING INTEGRATION: for react-idle-timer */},{key:\"triggerModalRegister\",value:function triggerModalRegister(){this.refs.modalRegister.toggle();}},{key:\"onModalRegisterSubmit\",value:function onModalRegisterSubmit(){this.refs.modalRegister.toggle();this.refs.modalRegisterConfirm.toggle();}},{key:\"triggerModalRegisterConfirm\",value:function triggerModalRegisterConfirm(){this.refs.modalRegisterConfirm.toggle();}},{key:\"triggerModalLogin\",value:function triggerModalLogin(){/* BEGIN PING INTEGRATION */ // Decided to just trigger an authn flow anytime we call this method.\nwindow.location.assign(this.startSSOURI);/* The below logic had the risk of submitting username to an expired flowId if the user just sat there for a time. \n    if (!window.location.search) {\n      window.location.assign(this.startSSOURI);\n    }\n    else { \n      this.refs.modalLogin.toggle(); //This is left here just in case the user closes the modal and clicks \"sign in\" after we already have a flowId in the URL.\n    } END PING INTEGRATION */}},{key:\"toggle\",value:function toggle(){this.setState({isOpen:!this.state.isOpen});}/* BEGIN PING INTEGRATION */},{key:\"startSLO\",value:function startSLO(){console.info(\"NavbarMain.js\",\"Logging out.\");//end the local app session\nthis.Session.clearUserAppSession();//An advisor should just be taken back to P14E dock. A partner persona shouldn't get SLO'd.\nif(window.location.pathname===\"/app/advisor/client\"||window.location.pathname===\"/app/advisor\"){//TODO IMPORTANT this P14E dock needs to be an env_var or injected during spin up in k8s. It will make it easier for anyone that want to clone their own instance of BXF.\nwindow.location.assign(\"https://desktop.pingone.com/anywealthadvisor/\");}else{//Banking customers get SLO'd.\nvar url=\"/sp/startSLO.ping?TargetResource=\"+process.env.REACT_APP_HOST+process.env.PUBLIC_URL+\"/\";window.location.assign(url);}}/* END PING INTEGRATION: */},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;// BEGIN PING INTEGRATION\nvar isLoggedOut=this.Session.getAuthenticatedUserItem(\"subject\")===null||this.Session.getAuthenticatedUserItem(\"subject\")==='undefined'?true:false;this.Session.protectPage(isLoggedOut,window.location.pathname,this.Session.getAuthenticatedUserItem(\"bxFinanceUserType\"));this.setState({loggedOut:isLoggedOut});// Check for a querystring; Will be fowId or REF in our current use cases.\nif(window.location.search){var params=new URLSearchParams(window.location.search);// Coming back from authN API.\nif(params.get(\"flowId\")){this.PingAuthN.handleAuthNflow({flowId:params.get(\"flowId\")}).then(function(response){return response.json();}).then(function(jsonResult){var success=_this2.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResult));//Browser's sessionStorage object only stores strings.\nif(jsonResult.status==\"IDENTIFIER_REQUIRED\"){//pop the ID first modal. \n_this2.refs.modalLogin.toggle();}else if(jsonResult.status==\"FAILED\"){_this2.refs.modalError.toggle(\"Authentication\",jsonResult.userMessage);}}).catch(function(error){return console.error('HANDLESUBMIT ERROR',error);});}// Coming back as authenticated user from AIK or SLO request from Agentless IK.\nelse if(params.get(\"REF\")){var REF=params.get(\"REF\");var targetApp=decodeURIComponent(params.get(\"TargetResource\"));var adapter=targetApp.includes(\"marketing\")||targetApp.includes(\"advisor\")?\"AdvisorSPRefID\":\"BXFSPRefID\";this.PingAuthN.pickUpAPI(REF,adapter).then(function(response){return response.json();}).then(function(jsonData){console.info(\"Pickup response\",jsonData);if(jsonData.resumePath){// Means we are in a SLO request. SSO uses resumeURL.\n_this2.Session.clearUserAppSession();/* \n              SP-init front-channel SLO with AIK won't work in a pure SPA.\n              All sessions are properly revoked but the PF cookie changes after\n              the REF pickup, so the resumePath returns an Expired page.\n              Since all sessions are cleaned up, we are just handling the redirect\n              back to the TargetResource ourselves which is /app/.\n              */targetApp=process.env.REACT_APP_HOST+process.env.PUBLIC_URL+\"/\";//targetApp = jsonData.resumePath + \"?source=\" + adapter;\n}else if(jsonData.bxFinanceUserType==\"AnyWealthAdvisor\"||jsonData.bxFinanceUserType==\"AnyMarketing\"){_this2.Session.setAuthenticatedUserItem(\"email\",jsonData.Email);_this2.Session.setAuthenticatedUserItem(\"subject\",jsonData.subject);_this2.Session.setAuthenticatedUserItem(\"firstName\",jsonData.FirstName);_this2.Session.setAuthenticatedUserItem(\"lastName\",jsonData.LastName);_this2.Session.setAuthenticatedUserItem(\"uid\",jsonData.uid);_this2.Session.setAuthenticatedUserItem(\"bxFinanceUserType\",jsonData.bxFinanceUserType);}else{//banking customer\n_this2.Session.setAuthenticatedUserItem(\"email\",jsonData.Email);_this2.Session.setAuthenticatedUserItem(\"subject\",jsonData.subject);_this2.Session.setAuthenticatedUserItem(\"firstName\",jsonData.FirstName);_this2.Session.setAuthenticatedUserItem(\"lastName\",jsonData.LastName);_this2.Session.setAuthenticatedUserItem(\"uid\",jsonData.uid);_this2.Session.setAuthenticatedUserItem(\"pfSessionId\",jsonData.sessionid);_this2.Session.setAuthenticatedUserItem(\"street\",jsonData.street);_this2.Session.setAuthenticatedUserItem(\"mobile\",jsonData.mobile);_this2.Session.setAuthenticatedUserItem(\"city\",jsonData.city);_this2.Session.setAuthenticatedUserItem(\"zipcode\",jsonData.postalCode);var fullAddress=jsonData.street+\", \"+jsonData.city+\", \"+jsonData.postalCode;_this2.Session.setAuthenticatedUserItem(\"fullAddress\",fullAddress);_this2.Session.setAuthenticatedUserItem(\"bxFinanceUserType\",\"customer\");//This is the default. Only dynamically set for partner/workforce.\n}// TODO can we do this SPA style with history.push? We would need to map targetApp to respective Router path.\nwindow.location.assign(targetApp);}).catch(function(error){console.error(\"Agentless Pickup Error:\",error);_this2.refs.modalError.toggle(\"Session Pickup Error\",error);});}}// END PING INTEGRATION\n// Original T3 code in this lifecycle method removed.\n}},{key:\"render\",value:function render(){var _ref,_this3=this;var match=this.props.match;var classes=this.props.classes;return/*#__PURE__*/React.createElement(\"section\",{className:\"navbar-main\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(AppBar,{classes:{root:'navBarRoot'},position:\"static\"},/*#__PURE__*/React.createElement(Toolbar,null,/*#__PURE__*/React.createElement(\"img\",{alt:'https://logos-download.com/wp-content/uploads/2016/06/FedEx_logo_orange-purple.png',className:'logo',src:logo// onClick={()=>{props.changePage('/')}}\n}),/*#__PURE__*/React.createElement(\"p\",{className:\"navBarText\"},\"Shipping\"),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},/*#__PURE__*/React.createElement(KeyboardArrowDown,null)),/*#__PURE__*/React.createElement(\"p\",{onClick:this.forceAuth// onClick={this.setState({loggedOut: !this.state.loggedOut})}\n,className:\"navBarText\"},\"Tracking\"),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},/*#__PURE__*/React.createElement(KeyboardArrowDown,null)),/*#__PURE__*/React.createElement(\"p\",{className:\"navBarText\"},\"Design & Print\"),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},/*#__PURE__*/React.createElement(KeyboardArrowDown,null)),/*#__PURE__*/React.createElement(\"p\",{className:\"navBarText\"},\"Locations\"),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},/*#__PURE__*/React.createElement(KeyboardArrowDown,null)),/*#__PURE__*/React.createElement(\"p\",{className:\"navBarText\"},\"Support\"),/*#__PURE__*/React.createElement(IconButton,{edge:\"start\",className:classes.menuButton,color:\"inherit\",\"aria-label\":\"menu\"},/*#__PURE__*/React.createElement(KeyboardArrowDown,null)),/*#__PURE__*/React.createElement(Button// onClick={this.state.loggedOut ? this.triggerModalLogin.bind(this) : this.toggleMenu}\n,{onClick:this.toggleMenu,classes:(_ref={root:'signUpButtonActive'},_defineProperty(_ref,\"root\",this.state.navMenuOpen?'signUpButtonActive':'signUpButton'),_defineProperty(_ref,\"endIcon\",'endIconSignUpButton'),_defineProperty(_ref,\"label\",'signUpButtonLabel'),_ref),color:\"inherit\",endIcon:/*#__PURE__*/React.createElement(AccountCircle,null)},this.state.loggedOut?'Sign Up or Log In':this.Session.getAuthenticatedUserItem('firstName'))))),/*#__PURE__*/React.createElement(ModalRegister,{ref:\"modalRegister\",onSubmit:this.onModalRegisterSubmit.bind(this)}),/*#__PURE__*/React.createElement(ModalRegisterConfirm,{ref:\"modalRegisterConfirm\"}),/*#__PURE__*/React.createElement(ModalLogin,{ref:\"modalLogin\"}),/*#__PURE__*/React.createElement(ModalError,{ref:\"modalError\"}),/*#__PURE__*/React.createElement(Menu,{classes:{paper:\"menuPaper\",list:\"menuPaperList\"},id:\"simple-menu\",anchorEl:this.state.anchorEl,keepMounted:true,open:this.state.navMenuOpen,onClose:function onClose(){return _this3.setState({navMenuOpen:false});}},!this.state.loggedOut?/*#__PURE__*/React.createElement(\"div\",null,menuItems.map(function(item){return/*#__PURE__*/React.createElement(MenuItem,{classes:{root:item.customClass?item.customClass:'navBarMenuItem'},onClick:_this3[item.onCick]},item.heading);}),/*#__PURE__*/React.createElement(MenuItem,{classes:{root:'navBarMenuItem'}},/*#__PURE__*/React.createElement(Link,{to:\"/\",onClick:this.startSLO.bind(this),className:\"nav-link\"},/*#__PURE__*/React.createElement(\"img\",{src:process.env.PUBLIC_URL+\"/images/icons/user.svg\",alt:data.menus.utility.logout,className:\"mr-1\"}),\" \",data.menus.utility.logout))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Link,{href:\"#\",className:\"submitButtonDropDown submitButtonLabel\",onClick:this.triggerModalLogin.bind(this)},\" \",data.menus.utility.login),/*#__PURE__*/React.createElement(\"p\",{className:'dropDownClickableText'},\"Forgot Password/User Id?\"),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(\"p\",{className:'dropDownText'},\"Get exclusive benefits when you open a FedEx account.\"),/*#__PURE__*/React.createElement(NavLink,{className:'dropDownClickableText',href:this.pfRegURI},data.menus.utility.register))));}}]);return NavbarMain;}(React.Component);export default withStyles(styles,{withTheme:true})(NavbarMain);","map":null,"metadata":{},"sourceType":"module"}