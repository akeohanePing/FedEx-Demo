{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ModalLoginPassword/ModalLoginPassword.js\";\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n// Packages\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Input, CustomInput, TabContent, TabPane } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport ButtonMaterial from '@material-ui/core/Button'; // Components\n\nimport FormPassword from '../../components/FormPassword';\nimport PingAuthN from '../Integration/PingAuthN';\n/* PING INTEGRATION */\n\nimport Session from '../Utils/Session';\n/* PING INTEGRATION: */\n// External scripts\n\nimport { injectExternalScript } from '../Utils/injectExternalScript'; // Styles\n\nimport \"./ModalLoginPassword.scss\"; // Data\n\nimport data from './data.json';\n\nclass ModalLoginPassword extends React.Component {\n  constructor() {\n    super();\n\n    this.deviceExists = type => {\n      let deviceFound = false;\n      const deviceListFlat = this.state.deviceList.flat();\n\n      if (deviceListFlat.indexOf(type) > -1) {\n        deviceFound = true;\n      }\n\n      return deviceFound;\n    };\n\n    this.state = {\n      isOpen: false,\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: '',\n      deviceRef: \"\",\n\n      /* PING INTEGRATION: Selected device's Id */\n      deviceName: \"\",\n\n      /* PING INTEGRATION: Device name if using mobile app. I.e. iPhone XS Max */\n      loginMethod: \"\",\n\n      /* PING INTEGRATION: SMS, Email, iPhone, TOTP */\n      loginTarget: \"\",\n\n      /* PING INTEGRATION: number or email of selected login method. */\n      deviceList: [],\n\n      /* PING INTEGRATION: */\n      otp: \"\",\n\n      /* PING INTEGRATION: */\n      userName: \"\",\n\n      /* PING INTEGRATION: */\n      swaprods: \"\",\n\n      /* PING INTEGRATION: */\n      loginError: false,\n\n      /* PING INTEGRATION: */\n      loginErrorMsg: \"\",\n\n      /* PING INTEGRATION: */\n      rememberMe: \"\",\n\n      /* PING INTEGRATION: */\n      deviceProfile: {}\n      /* PING INTEGRATION: */\n\n    };\n    this.PingAuthN = new PingAuthN();\n    /* PING INTEGRATION: */\n\n    this.Session = new Session();\n    /* PING INTEGRATION: */\n\n    this.buildDeviceProfile = this.buildDeviceProfile.bind(this);\n    /* PING INTEGRATION: */\n\n    this.deviceProfileString = '';\n    /* PING INTEGRATION: */\n  }\n  /* BEGIN PING INTEGRATION: */\n  // function as class property. // Note: Per reactjs.org this syntax is experimental and not standardized yet. (Stage 3 proposal).\n  //Used to update device selection tabPane based on user's list of paired devices.\n\n\n  /* END PING INTEGRATION: */\n  onClosed() {\n    this.setState({\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: ''\n    });\n  }\n\n  toggle(userName) {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      userName: userName\n    });\n  }\n\n  toggleTab(tab) {\n    /* BEGIN PING INTEGRATION: We're letting PF handle SSPR to demo Velocity templates. */\n    if (tab == '4') {\n      window.location.assign(data.pfAcctRecoveryURI);\n    } else if (tab == '5') {\n      window.location.assign(data.pfPwdResetURI);\n    } else {\n      /* END PING INTEGRATION */\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  setLoginMethod(event) {\n    /* BEGIN PING INTEGRATION: had to make this kind of polymorphic due to a late feature add of the \"default device\" concept in P1MFA. */\n    let deviceSelection = \"\";\n    let deviceId = \"\";\n    let deviceRefIndex;\n    let target = \"\";\n    let name = \"\";\n    const deviceList = this.state.deviceList;\n\n    if (typeof event === \"string\") {\n      //This will be the defaulted device Id.\n      deviceId = event;\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceId);\n      });\n      deviceSelection = deviceList[deviceRefIndex][0];\n    } else {\n      //We got the selected device from the user in the device selection UI.\n      const delimiterPos = event.target.id.lastIndexOf(\"_\");\n      deviceSelection = event.target.id.substring(delimiterPos + 1);\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceSelection);\n      });\n      deviceId = deviceList[deviceRefIndex][1];\n    }\n\n    deviceRefIndex = deviceList.findIndex((element, index) => {\n      return element.includes(deviceSelection);\n    });\n    target = deviceList[deviceRefIndex][2];\n    name = deviceList[deviceRefIndex][3];\n    this.setState(previousState => {\n      //TODO not referencing previousState anymore. should get rid of this and just do standard setState instead of arrow function.\n      return {\n        deviceRef: deviceId,\n        loginTarget: target,\n        loginMethod: deviceSelection,\n        deviceName: name,\n        loginMethodUnset: false,\n        loginMethodFormGroupClass: 'form-group-light' //Doubt we need this. Was probably T3 placeholder since they didn't know how we would Implement Ping integration.\n\n      };\n    });\n    /* END PING INTEGRATION: */\n  }\n  /* BEGIN PING INTEGRATION: */\n  // Controlled input for the Remember Me checkbox.\n  //If they check it, we save their username to a cookie for the next time they log in.\n  //ModalLogin.js will check for cookies and prepop the username field.\n\n\n  handleRememberMeChange() {\n    this.setState(prevState => {\n      if (prevState.rememberMe) {\n        document.cookie = \"rememberMe=\";\n      } else {\n        document.cookie = \"rememberMe=\" + this.state.userName;\n      }\n\n      return {\n        rememberMe: !prevState.rememberMe\n      };\n    });\n  } // This is used as a callback function to the child component FormPassword.\n\n\n  handlePswdChange(event) {\n    this.setState({\n      swaprods: event.target.value\n    }, () => {});\n  }\n\n  handleOTPChange(event) {\n    // grabbing whatever the user is typing in the OTP form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({\n      otp: event.target.value\n    });\n  }\n\n  handleEmailChange(event) {\n    //This is not used since PF is handling SSPR to demo Velocity templates.\n    // Keeping it here in case Velocity templates get nixed from demos.\n    // Grabbing whatever the user is typing in the email form as they type, and\n    // saving it to state.\n    this.setState({\n      email: event.target.value\n    });\n  } //When user clicks \"Next\".\n  // Handler for various TabPane UIs.\n  // TODO T3 used numeric IDs for the TabPanes in render(). With our handler, \n  // it would be easier to visually map in the code if they had text IDs related to the UI of the TabPane. I.e. \"IDF\", \"Devices\", etc.\n\n\n  handleSubmit(tab) {\n    // Clear error state for next pass through.\n    this.setState({\n      loginError: false,\n      loginErrorMsg: \"\"\n    });\n    const pswd = tab == '2' ? this.state.swaprods : \"WTF?\"; //TODO Do we care about the tab param here? Toss?\n\n    const cachedFlowResponse = JSON.parse(this.Session.getAuthenticatedUserItem(\"flowResponse\"));\n\n    if (pswd) {\n      //TODO do we need this test anymore?\n      let data = \"\";\n\n      switch (tab) {\n        case \"1\":\n          // Usernmae/password form. This is the default state. Will probably never be called from here.\n          this.toggleTab(\"1\");\n          break;\n\n        case \"2\":\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            swaprods: this.state.swaprods,\n            rememberMe: this.state.rememberMe\n          }).then(response => response.json()).then(jsonResults => {\n            //We only want to cache the flow response if it has a status. Otherwise it's an error of some kind.\n            if (jsonResults.status) {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResults));\n            }\n\n            if (jsonResults.status === \"RESUME\") {\n              this.PingAuthN.handleAuthNflow({\n                flowResponse: jsonResults\n              }); //Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n            } else if (jsonResults.status == \"DEVICE_PROFILE_REQUIRED\") {\n              console.info(\"ModalLoginPassword.js\", \"PingOne Risk eval needs device profile.\");\n              window.profileDevice(this.buildDeviceProfile); //BEGIN DELAY: P1Risk device profiling scripts take just long enough to run that we were trying to send the profile to the authN API before we had it.\n\n              let intervalId = setInterval(() => {\n                this.PingAuthN.handleAuthNflow({\n                  flowResponse: jsonResults,\n                  body: this.deviceProfileString\n                }).then(response => response.json()).then(jsonResponse => {\n                  let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n\n                  if (jsonResponse.status === \"RESUME\") {\n                    clearTimeout(intervalId);\n                    this.PingAuthN.handleAuthNflow({\n                      flowResponse: jsonResponse\n                    }); //Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n                  } else if (jsonResponse.status === \"AUTHENTICATION_REQUIRED\") {\n                    clearTimeout(intervalId);\n                    this.PingAuthN.handleAuthNflow({\n                      flowResponse: jsonResponse,\n                      body: \"\"\n                    }).then(response => response.json()).then(jsonResponse => {\n                      let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse)); // We always get back a list of devices whether they have a default or not.\n\n                      let devices = jsonResponse.devices.map(device => {\n                        return [device.type, device.id, device.target, device.name];\n                      });\n                      this.setState({\n                        deviceList: devices\n                      }); //Because we might have a default device in P1MFA.\n\n                      if (jsonResponse.selectedDeviceRef) {\n                        this.setLoginMethod(jsonResponse.selectedDeviceRef.id);\n                      }\n\n                      if (jsonResponse.status === \"DEVICE_SELECTION_REQUIRED\") {\n                        this.toggleTab(tab); //If we're below here it's because the user has a default device in P1MFA.\n                      } else if (jsonResponse.status === \"OTP_REQUIRED\") {\n                        this.toggleTab(\"3\");\n                      } else {\n                        // This assumes their default device response was PUSH_CONFIRMATION_WAITING\n                        this.toggleTab(\"7\");\n                        this.handleSubmit(\"7\");\n                      }\n                    });\n                  }\n                });\n              }, 1000, jsonResults, this.deviceProfileString); //END DELAY.\n            } else if (jsonResults.code == \"VALIDATION_ERROR\") {\n              console.info(\"Validation Error\", jsonResults.details[0].userMessage);\n              this.setState({\n                loginError: true,\n                loginErrorMsg: jsonResults.details[0].userMessage\n              });\n            } else {\n              throw \"Flow Status Exception: Unexpected status.\"; //TODO This is probably a corner case, but we need to use ModalError.js for this.\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNFlow() Exception:\", e);\n          });\n          break;\n\n        case \"3\":\n          data = this.state.deviceRef;\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            body: data\n          }).then(response => response.json()).then(jsonResult => {\n            let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n            if (jsonResult.status === \"OTP_REQUIRED\") {\n              this.toggleTab(tab);\n            } else if (jsonResult.status === \"PUSH_CONFIRMATION_WAITING\") {\n              this.handleSubmit(\"7\");\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNflow exception:\", e);\n          });\n          break;\n\n        case \"4\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          // @see this.toggleTab(tab);\n          break;\n\n        case \"5\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          // @see this.toggleTab(tab);\n          break;\n\n        case \"6\":\n          // Tab 6 is newly created for OTP submitted/success.\n          data = this.state.otp;\n          this.toggleTab(tab);\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            body: data\n          }).then(response => response.json()).then(jsonResponse => {\n            let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n\n            if (jsonResponse.status === \"MFA_COMPLETED\") {\n              this.PingAuthN.handleAuthNflow({\n                flowResponse: jsonResponse,\n                body: \"\"\n              }).then(response => response.json()).then(jsonResult => {\n                let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n                if (jsonResult.status === \"RESUME\") {\n                  this.PingAuthN.handleAuthNflow({\n                    flowResponse: jsonResult\n                  });\n                }\n              });\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNflow exception:\", e);\n          });\n          break;\n\n        case \"7\":\n          // Tab 7 is newly created for mobile push sent/success.\n          this.toggleTab(tab);\n\n          const polling = () => {\n            this.PingAuthN.handleAuthNflow({\n              flowResponse: cachedFlowResponse\n            }).then(response => response.json()).then(jsonResponse => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n\n              if (jsonResponse.status === \"MFA_COMPLETED\") {\n                this.PingAuthN.handleAuthNflow({\n                  flowResponse: jsonResponse,\n                  body: \"\"\n                }).then(response => response.json()).then(jsonResult => {\n                  let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n                  if (jsonResult.status === \"RESUME\") {\n                    window.clearInterval(pollingID);\n                    this.PingAuthN.handleAuthNflow({\n                      flowResponse: jsonResult\n                    });\n                  }\n                });\n              }\n            }).catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          };\n\n          let pollingID = window.setInterval(polling, 3000);\n          break;\n\n        case \"8\":\n          //TODO  need implementation? Do we ever get here? or is this another case handled by PF UIs?\n          break;\n      }\n    }\n  } // Callback for P1 Risk profiling scripts.\n  // When P1 Risk profiles the user's device, it will call this method passing the raw device profile.\n\n\n  buildDeviceProfile(deviceComponents) {\n    const formattedProfile = window.transformComponentsToDeviceProfile(deviceComponents);\n    this.deviceProfileString = JSON.stringify(formattedProfile);\n  }\n\n  componentDidMount() {\n    const rememberMe = this.Session.getCookie(\"rememberMe\");\n\n    if (rememberMe.length) {\n      this.setState({\n        rememberMe: true\n      });\n    } // Appending scripts for PingOne Risk device profiling.\n\n\n    injectExternalScript(\"/app/scripts/fingerprint2-2.1.4.min.js\");\n    injectExternalScript(\"/app/scripts/pingone-risk-management-profiling.js\");\n  }\n  /* END PING INTEGRATION: */\n\n\n  render() {\n    const closeBtn = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 22\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      toggle: this.toggle.bind(this),\n      onClosed: this.onClosed.bind(this),\n      className: \"modal-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggle.bind(this),\n      close: closeBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: '20px !important'\n      },\n      src: process.env.PUBLIC_URL + \"/images/logo.png\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 73\n      }\n    })), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, data.titles.welcome), this.state.loginError && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 45\n      }\n    }, this.state.loginErrorMsg), \" \", /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, data.form.fields.username.label), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      readOnly: true,\n      id: \"username\",\n      value: this.state.userName,\n      placeholder: data.form.fields.username.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, data.form.fields.password.label), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      onChange: this.handlePswdChange.bind(this),\n      name: \"password\",\n      id: \"password\",\n      placeholder: data.form.fields.password.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      onChange: this.handleRememberMeChange.bind(this),\n      type: \"checkbox\",\n      id: \"remember\",\n      label: data.form.fields.remember.label,\n      checked: this.state.rememberMe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonMaterial, {\n      classes: {\n        root: 'submitButtonModal',\n        text: 'submitButtonLabel'\n      },\n      onClick: () => {\n        this.handleSubmit(\"3\");\n      },\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }\n    }, data.form.buttons.next)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info pl-0\",\n      onClick: () => {\n        this.toggleTab('4');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, data.form.buttons.reset)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info pl-0\",\n      onClick: () => {\n        this.toggleTab('5');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, data.form.buttons.reset_password))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    }, data.titles.login_method), /*#__PURE__*/React.createElement(FormGroup, {\n      className: this.state.loginMethodFormGroupClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, this.deviceExists(\"iPhone\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_iPhone\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.faceid,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 25\n      }\n    }), this.deviceExists(\"SMS\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_SMS\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.text,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }), this.deviceExists(\"Email\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_Email\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.email,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      disabled: this.state.loginMethodUnset,\n      onClick: () => {\n        this.handleSubmit('3');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }\n    }, data.form.buttons.login)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }\n    }, \" \", \"Using \", this.state.loginMethod, \" at \", this.state.loginTarget, \".\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile-loading\",\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/login-device-outline.jpg)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCircleNotch,\n      size: \"3x\",\n      className: \"fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, data.mobile.loading)), this.state.loginMethod !== \"iPhone\" && /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"otp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 23\n      }\n    }, data.form.fields.otp.label), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleOTPChange.bind(this),\n      type: \"text\",\n      name: \"otp\",\n      id: \"otp\",\n      placeholder: data.form.fields.otp.placeholder,\n      value: this.state.otp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 23\n      }\n    })), this.state.loginMethod !== \"iPhone\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleSubmit('6');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 23\n      }\n    }, data.form.buttons.next), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    }, data.form.buttons.recover_username), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }\n    }, data.form.fields.email.label), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleEmailChange.bind(this),\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: data.form.fields.email.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleSubmit('5');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }\n    }, data.form.buttons.recover_username))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 19\n      }\n    }, data.form.buttons.recover_password), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }\n    }, data.form.fields.email.label), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: data.form.fields.email.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.toggleTab('6');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 21\n      }\n    }, data.form.buttons.recover_password))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 19\n      }\n    }, data.titles.otp_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }\n    }, \" \", \"Using your \", this.state.deviceName ? this.state.deviceName : this.state.loginMethod, \".\", /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-toggle\": \"tooltip\",\n      title: \"See what we did there?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 19\n      }\n    }, data.titles.mobile_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 19\n      }\n    }, data.titles.recover_username_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.toggleTab('1');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 21\n      }\n    }, data.form.buttons.login))))))));\n  }\n\n}\n\nexport default ModalLoginPassword;","map":{"version":3,"sources":["/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ModalLoginPassword/ModalLoginPassword.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","FormGroup","Label","Input","CustomInput","TabContent","TabPane","FontAwesomeIcon","faCircleNotch","ButtonMaterial","FormPassword","PingAuthN","Session","injectExternalScript","data","ModalLoginPassword","Component","constructor","deviceExists","type","deviceFound","deviceListFlat","state","deviceList","flat","indexOf","isOpen","activeTab","loginMethodUnset","loginMethodFormGroupClass","deviceRef","deviceName","loginMethod","loginTarget","otp","userName","swaprods","loginError","loginErrorMsg","rememberMe","deviceProfile","buildDeviceProfile","bind","deviceProfileString","onClosed","setState","toggle","toggleTab","tab","window","location","assign","pfAcctRecoveryURI","pfPwdResetURI","setLoginMethod","event","deviceSelection","deviceId","deviceRefIndex","target","name","findIndex","element","index","includes","delimiterPos","id","lastIndexOf","substring","previousState","handleRememberMeChange","prevState","document","cookie","handlePswdChange","value","handleOTPChange","handleEmailChange","email","handleSubmit","pswd","cachedFlowResponse","JSON","parse","getAuthenticatedUserItem","handleAuthNflow","flowResponse","then","response","json","jsonResults","status","success","setAuthenticatedUserItem","stringify","console","info","profileDevice","intervalId","setInterval","body","jsonResponse","clearTimeout","devices","map","device","selectedDeviceRef","code","details","userMessage","catch","e","error","jsonResult","polling","clearInterval","pollingID","deviceComponents","formattedProfile","transformComponentsToDeviceProfile","componentDidMount","getCookie","length","render","closeBtn","height","process","env","PUBLIC_URL","titles","welcome","color","form","fields","username","label","placeholder","password","remember","root","text","buttons","next","reset","reset_password","login_method","options","faceid","login","help","backgroundImage","mobile","loading","recover_username","recover_password","otp_success","mobile_success","recover_username_success"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\n// Packages\nimport React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  Label,\n  Input,\n  CustomInput,\n  TabContent, TabPane\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonMaterial from '@material-ui/core/Button';\n\n// Components\nimport FormPassword from '../../components/FormPassword';\nimport PingAuthN from '../Integration/PingAuthN' /* PING INTEGRATION */\nimport Session from '../Utils/Session' /* PING INTEGRATION: */\n\n// External scripts\nimport { injectExternalScript } from '../Utils/injectExternalScript';\n\n// Styles\nimport \"./ModalLoginPassword.scss\";\n\n// Data\nimport data from './data.json';\n\nclass ModalLoginPassword extends React.Component {\n\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: '',\n      deviceRef: \"\",                  /* PING INTEGRATION: Selected device's Id */\n      deviceName: \"\",                 /* PING INTEGRATION: Device name if using mobile app. I.e. iPhone XS Max */\n      loginMethod: \"\",                /* PING INTEGRATION: SMS, Email, iPhone, TOTP */\n      loginTarget: \"\",                /* PING INTEGRATION: number or email of selected login method. */\n      deviceList: [],                 /* PING INTEGRATION: */\n      otp: \"\",                        /* PING INTEGRATION: */\n      userName: \"\",                   /* PING INTEGRATION: */\n      swaprods: \"\",                   /* PING INTEGRATION: */\n      loginError: false,              /* PING INTEGRATION: */\n      loginErrorMsg: \"\",              /* PING INTEGRATION: */\n      rememberMe: \"\",                 /* PING INTEGRATION: */\n      deviceProfile: {}               /* PING INTEGRATION: */\n    };\n    this.PingAuthN = new PingAuthN(); /* PING INTEGRATION: */\n    this.Session = new Session();     /* PING INTEGRATION: */\n    this.buildDeviceProfile = this.buildDeviceProfile.bind(this); /* PING INTEGRATION: */\n    this.deviceProfileString = ''; /* PING INTEGRATION: */\n  }\n\n  /* BEGIN PING INTEGRATION: */\n  // function as class property. // Note: Per reactjs.org this syntax is experimental and not standardized yet. (Stage 3 proposal).\n  //Used to update device selection tabPane based on user's list of paired devices.\n  deviceExists = (type) => {\n    let deviceFound = false;\n    const deviceListFlat = this.state.deviceList.flat();\n\n    if (deviceListFlat.indexOf(type) > -1) {\n      deviceFound = true;\n    }\n\n    return deviceFound;\n  }\n  /* END PING INTEGRATION: */\n\n  onClosed() {\n    this.setState({\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: ''\n    });\n  }\n  toggle(userName) {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      userName: userName\n    });\n  }\n  toggleTab(tab) {\n    /* BEGIN PING INTEGRATION: We're letting PF handle SSPR to demo Velocity templates. */\n    if (tab == '4') {\n      window.location.assign(data.pfAcctRecoveryURI);\n    } else if (tab == '5') {\n      window.location.assign(data.pfPwdResetURI);\n    } else {\n      /* END PING INTEGRATION */\n\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  setLoginMethod(event) {\n    /* BEGIN PING INTEGRATION: had to make this kind of polymorphic due to a late feature add of the \"default device\" concept in P1MFA. */\n    let deviceSelection = \"\";\n    let deviceId = \"\";\n    let deviceRefIndex;\n    let target = \"\";\n    let name = \"\";\n    const deviceList = this.state.deviceList;\n\n    if (typeof event === \"string\") { //This will be the defaulted device Id.\n      deviceId = event;\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceId);\n      });\n      deviceSelection = deviceList[deviceRefIndex][0];\n    } else { //We got the selected device from the user in the device selection UI.\n      const delimiterPos = event.target.id.lastIndexOf(\"_\");\n      deviceSelection = event.target.id.substring(delimiterPos + 1);\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceSelection);\n      });\n      \n      deviceId = deviceList[deviceRefIndex][1];\n    }\n\n    deviceRefIndex = deviceList.findIndex((element, index) => {\n      return element.includes(deviceSelection);\n    });\n    target = deviceList[deviceRefIndex][2];\n    name = deviceList[deviceRefIndex][3];\n\n    this.setState(previousState => {//TODO not referencing previousState anymore. should get rid of this and just do standard setState instead of arrow function.\n      return {\n        deviceRef: deviceId,\n        loginTarget: target,\n        loginMethod: deviceSelection,\n        deviceName: name,\n        loginMethodUnset: false,\n        loginMethodFormGroupClass: 'form-group-light' //Doubt we need this. Was probably T3 placeholder since they didn't know how we would Implement Ping integration.\n      }\n    });\n    /* END PING INTEGRATION: */\n  }\n\n  /* BEGIN PING INTEGRATION: */\n  // Controlled input for the Remember Me checkbox.\n  //If they check it, we save their username to a cookie for the next time they log in.\n  //ModalLogin.js will check for cookies and prepop the username field.\n  handleRememberMeChange() {\n    this.setState((prevState) => {\n      if (prevState.rememberMe) {\n        document.cookie = \"rememberMe=\";\n      } else {\n        document.cookie = \"rememberMe=\" + this.state.userName;\n      }\n      return { rememberMe: !prevState.rememberMe };\n    });\n  }\n\n  // This is used as a callback function to the child component FormPassword.\n  handlePswdChange(event) {\n    this.setState({ swaprods: event.target.value }, () => {\n    });\n  }\n\n  handleOTPChange(event) {\n    // grabbing whatever the user is typing in the OTP form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({ otp: event.target.value });\n  }\n\n  handleEmailChange(event) {\n    //This is not used since PF is handling SSPR to demo Velocity templates.\n    // Keeping it here in case Velocity templates get nixed from demos.\n    // Grabbing whatever the user is typing in the email form as they type, and\n    // saving it to state.\n    this.setState({ email: event.target.value });\n  }\n\n  //When user clicks \"Next\".\n  // Handler for various TabPane UIs.\n  // TODO T3 used numeric IDs for the TabPanes in render(). With our handler, \n  // it would be easier to visually map in the code if they had text IDs related to the UI of the TabPane. I.e. \"IDF\", \"Devices\", etc.\n  handleSubmit(tab) {\n    // Clear error state for next pass through.\n    this.setState({\n      loginError: false,\n      loginErrorMsg: \"\"\n    });\n    const pswd = tab == '2' ? this.state.swaprods : \"WTF?\"; //TODO Do we care about the tab param here? Toss?\n    const cachedFlowResponse = JSON.parse(this.Session.getAuthenticatedUserItem(\"flowResponse\"));\n\n    if (pswd) { //TODO do we need this test anymore?\n      let data = \"\";\n\n      switch (tab) {\n        case \"1\":\n          // Usernmae/password form. This is the default state. Will probably never be called from here.\n          this.toggleTab(\"1\");\n          break;\n        case \"2\":\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, swaprods: this.state.swaprods, rememberMe: this.state.rememberMe })\n            .then(response => response.json())\n            .then(jsonResults => {\n              //We only want to cache the flow response if it has a status. Otherwise it's an error of some kind.\n              if (jsonResults.status) {let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResults));}\n              \n              if (jsonResults.status === \"RESUME\") {\n                this.PingAuthN.handleAuthNflow({ flowResponse: jsonResults });//Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n              } else if (jsonResults.status == \"DEVICE_PROFILE_REQUIRED\") {\n                console.info(\"ModalLoginPassword.js\",\"PingOne Risk eval needs device profile.\");\n                window.profileDevice(this.buildDeviceProfile);\n                //BEGIN DELAY: P1Risk device profiling scripts take just long enough to run that we were trying to send the profile to the authN API before we had it.\n                let intervalId = setInterval(() => {\n                  this.PingAuthN.handleAuthNflow({ flowResponse: jsonResults, body: this.deviceProfileString })\n                    .then(response => response.json())\n                    .then(jsonResponse => {\n                      let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n                      if (jsonResponse.status === \"RESUME\") {\n                        clearTimeout(intervalId);\n                        this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse });//Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n                      } else if (jsonResponse.status === \"AUTHENTICATION_REQUIRED\") {\n                        clearTimeout(intervalId);\n                        this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse, body: \"\" })\n                          .then(response => response.json())\n                          .then(jsonResponse => {\n                            let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n                            // We always get back a list of devices whether they have a default or not.\n                            let devices = jsonResponse.devices.map((device) => {\n                              return [device.type, device.id, device.target, device.name];\n                            });\n                            this.setState({ deviceList: devices });\n\n                            //Because we might have a default device in P1MFA.\n                            if (jsonResponse.selectedDeviceRef) {\n                              this.setLoginMethod(jsonResponse.selectedDeviceRef.id);\n                            }\n\n                            if (jsonResponse.status === \"DEVICE_SELECTION_REQUIRED\") {\n                              this.toggleTab(tab);\n                              //If we're below here it's because the user has a default device in P1MFA.\n                            } else if (jsonResponse.status === \"OTP_REQUIRED\") {\n                              this.toggleTab(\"3\");\n                            } else { // This assumes their default device response was PUSH_CONFIRMATION_WAITING\n                              this.toggleTab(\"7\");\n                              this.handleSubmit(\"7\");\n                            }\n                          });\n                      }\n                    });\n                }, 1000, jsonResults, this.deviceProfileString);\n                //END DELAY.\n              } else if (jsonResults.code == \"VALIDATION_ERROR\") {\n                console.info(\"Validation Error\", jsonResults.details[0].userMessage);\n                this.setState({\n                  loginError: true,\n                  loginErrorMsg: jsonResults.details[0].userMessage\n                });\n              } else {\n                throw \"Flow Status Exception: Unexpected status.\"; //TODO This is probably a corner case, but we need to use ModalError.js for this.\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNFlow() Exception:\", e);\n            });\n          break;\n        case \"3\":\n          data = this.state.deviceRef;\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, body: data })\n            .then(response => response.json())\n            .then(jsonResult => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n              if (jsonResult.status === \"OTP_REQUIRED\") {\n                this.toggleTab(tab);\n              } else if (jsonResult.status === \"PUSH_CONFIRMATION_WAITING\") {\n                this.handleSubmit(\"7\");\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          break;\n        case \"4\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          // @see this.toggleTab(tab);\n          break;\n        case \"5\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          // @see this.toggleTab(tab);\n          break;\n        case \"6\":\n          // Tab 6 is newly created for OTP submitted/success.\n          data = this.state.otp;\n          this.toggleTab(tab);\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, body: data })\n            .then(response => response.json())\n            .then(jsonResponse => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n              if (jsonResponse.status === \"MFA_COMPLETED\") {\n                this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse, body: \"\" })\n                  .then(response => response.json())\n                  .then(jsonResult => {\n                    let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n                    if (jsonResult.status === \"RESUME\") {\n                      this.PingAuthN.handleAuthNflow({ flowResponse: jsonResult })\n                    }\n                  });\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          break;\n        case \"7\":\n          // Tab 7 is newly created for mobile push sent/success.\n          this.toggleTab(tab);\n          const polling = () => {\n            this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse })\n              .then(response => response.json())\n              .then(jsonResponse => {\n                let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n                if (jsonResponse.status === \"MFA_COMPLETED\") {\n                  this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse, body: \"\" })\n                    .then(response => response.json())\n                    .then(jsonResult => {\n                      let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n                      if (jsonResult.status === \"RESUME\") {\n                        window.clearInterval(pollingID);\n                        this.PingAuthN.handleAuthNflow({ flowResponse: jsonResult })\n                      }\n                    });\n                }\n              })\n              .catch(e => {\n                console.error(\"handleAuthNflow exception:\", e);\n              });\n          }\n          let pollingID = window.setInterval(polling, 3000);\n          break;\n        case \"8\":\n          //TODO  need implementation? Do we ever get here? or is this another case handled by PF UIs?\n          break;\n      }\n      \n    }\n  }\n\n  // Callback for P1 Risk profiling scripts.\n  // When P1 Risk profiles the user's device, it will call this method passing the raw device profile.\n  buildDeviceProfile(deviceComponents) {\n    const formattedProfile = window.transformComponentsToDeviceProfile(deviceComponents)\n    this.deviceProfileString = JSON.stringify(formattedProfile);\n  }\n\n  componentDidMount() {\n    const rememberMe = this.Session.getCookie(\"rememberMe\");\n    if (rememberMe.length) {\n      this.setState({ rememberMe: true });\n    }\n    // Appending scripts for PingOne Risk device profiling.\n    injectExternalScript(\"/app/scripts/fingerprint2-2.1.4.min.js\");\n    injectExternalScript(\"/app/scripts/pingone-risk-management-profiling.js\");\n  }\n  /* END PING INTEGRATION: */\n\n  render() {\n    const closeBtn = <div />;\n    return (\n      <div>\n        <Modal isOpen={this.state.isOpen} toggle={this.toggle.bind(this)} onClosed={this.onClosed.bind(this)} className=\"modal-login\">\n          <ModalHeader toggle={this.toggle.bind(this)} close={closeBtn}><img style={{height: '20px !important'}} src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt=\"logo\" /></ModalHeader>\n          <ModalBody>\n            <form>\n              <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId=\"1\"> {/* Username/password */}\n                  <h4>{data.titles.welcome}</h4>\n                  {this.state.loginError && <span style={{ color: 'red' }}>{this.state.loginErrorMsg}</span>} {/* PING INTEGRATION */}\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"username\">{data.form.fields.username.label}</Label>\n                    <Input type=\"text\" name=\"username\" readOnly id=\"username\" value={this.state.userName} placeholder={data.form.fields.username.placeholder} />\n                  </FormGroup>\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"password\">{data.form.fields.password.label}</Label>\n                    <Input type=\"password\" onChange={this.handlePswdChange.bind(this)} name=\"password\" id=\"password\" placeholder={data.form.fields.password.placeholder} />\n                  </FormGroup>\n                  {/* <FormPassword setPassword={this.handlePswdChange} name=\"password\" label={data.form.fields.password.label} placeholder={data.form.fields.password.placeholder} /> */}\n                  <FormGroup className=\"form-group-light\">\n                    <CustomInput onChange={this.handleRememberMeChange.bind(this)} type=\"checkbox\" id=\"remember\" label={data.form.fields.remember.label} checked={this.state.rememberMe} />\n                  </FormGroup>\n                  <div className=\"mb-3\">\n                    {/* <Button type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('2') }}>{data.form.buttons.next}</Button> */}\n                    <ButtonMaterial\n                      classes={{\n                          root: 'submitButtonModal',\n                          text: 'submitButtonLabel'\n                      }}\n                      onClick={() => { this.handleSubmit(\"3\"); }}\n                      variant=\"text\">\n                      {data.form.buttons.next}\n                    </ButtonMaterial>\n                  </div>\n                  <div>\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info pl-0\" onClick={() => { this.toggleTab('4'); }}>{data.form.buttons.reset}</Button>\n                  </div>\n                  <div>\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info pl-0\" onClick={() => { this.toggleTab('5'); }}>{data.form.buttons.reset_password}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"2\"> {/* Device/login selection. */}\n                  <h4>{data.titles.login_method}</h4>\n                  <FormGroup className={this.state.loginMethodFormGroupClass}>\n                    <div>{/* BEGIN PING INTEGRATION */}\n                      {this.deviceExists(\"iPhone\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_iPhone\" name=\"login_method\" label={data.form.fields.login_method.options.faceid} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                      {/* NOT SUPPORTING THIS FOR DEMOS {this.deviceExists(\"TOTP\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_TOTP\" name=\"login_method\" label={data.form.fields.login_method.options.totp} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />} */}\n                      {this.deviceExists(\"SMS\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_SMS\" name=\"login_method\" label={data.form.fields.login_method.options.text} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                      {this.deviceExists(\"Email\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_Email\" name=\"login_method\" label={data.form.fields.login_method.options.email} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                    </div>{/* END PING INTEGRATION */}\n                  </FormGroup>\n                  <div className=\"mb-4 text-center\">\n                    <Button type=\"button\" color=\"primary\" disabled={this.state.loginMethodUnset} onClick={() => { this.handleSubmit('3'); }}>{data.form.buttons.login}</Button>\n                  </div>\n                  <div className=\"text-center\">\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"3\">{/* MFA sent, check phone msg. */} {/* TODO jump to here for default device if OTP_REQUIRED */}\n                  Using {this.state.loginMethod} at {this.state.loginTarget}.\n                  <div className=\"mobile-loading\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/login-device-outline.jpg)` }}>\n                    <div className=\"spinner\">\n                      <FontAwesomeIcon icon={faCircleNotch} size=\"3x\" className=\"fa-spin\" />\n                    </div>\n                    <p>{data.mobile.loading}</p>\n                  </div>\n                  {/* BEGIN PING INTEGRATION: adding missing OTP entry text field. */}\n                  {this.state.loginMethod !== \"iPhone\" &&\n                    <FormGroup className=\"form-group-light\">\n                      <Label for=\"otp\">{data.form.fields.otp.label}</Label>\n                      <Input onChange={this.handleOTPChange.bind(this)} type=\"text\" name=\"otp\" id=\"otp\" placeholder={data.form.fields.otp.placeholder} value={this.state.otp} />\n                    </FormGroup>}\n                  {this.state.loginMethod !== \"iPhone\" &&\n                    <div className=\"mb-3\">\n                      <Button type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('6'); }}>{data.form.buttons.next}</Button> {/* PING INTEGRATION see onClick function. */}\n                    </div>}\n                  {/* END PING INTEGRATION */}\n                  <div className=\"mt-4 text-center\">\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"4\">{/* Recover userName. This is now handled by PF to demo Velocity templates. */}\n                  <h4>{data.form.buttons.recover_username}</h4>\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"email\">{data.form.fields.email.label}</Label>\n                    <Input onChange={this.handleEmailChange.bind(this)} type=\"text\" name=\"email\" id=\"email\" placeholder={data.form.fields.email.placeholder} />\n                  </FormGroup>\n                  <div className=\"mb-3\">\n                    <Button type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('5'); }}>{data.form.buttons.recover_username}</Button>{/* PING INTEGRATION: See onClick function. */}\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"5\">{/* Not using TabPane 5. SSPR handled by PF. May use in the future. */}\n                  <h4>{data.form.buttons.recover_password}</h4>\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"email\">{data.form.fields.email.label}</Label>\n                    <Input type=\"text\" name=\"email\" id=\"email\" placeholder={data.form.fields.email.placeholder} />\n                  </FormGroup>\n                  <div className=\"mb-3\">\n                    <Button type=\"button\" color=\"primary\" onClick={() => { this.toggleTab('6'); }}>{data.form.buttons.recover_password}</Button>\n                  </div>\n                </TabPane>\n                {/* BEGIN PING INTEGRATION: added TabPanes for OTP submission and mobile push success. */}\n                <TabPane tabId=\"6\">{/* OTP sent. */}\n                  <h4>{data.titles.otp_success}</h4>\n                  <div className=\"mt-4 text-center\">\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"7\">{/* Mobile app push sent. */} {/* TODO jump to here for default device if mobile PUSH_CONFIRMATION_WAITING */}\n                Using your {this.state.deviceName ? this.state.deviceName : this.state.loginMethod}.\n                  <h4 data-toggle=\"tooltip\" title=\"See what we did there?\">{data.titles.mobile_success}</h4>\n                  <div className=\"mt-4 text-center\">\n                    <Button type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                {/* END PING INTEGRATION */}\n                <TabPane tabId=\"8\"> {/* This used to be tabId 6 in the original T3 supplied UI. Just FYI for historical reference. */}\n                  <h4>{data.titles.recover_username_success}</h4>\n                  <div className=\"mb-3 text-center\">\n                    <Button type=\"button\" color=\"primary\" onClick={() => { this.toggleTab('1'); }}>{data.form.buttons.login}</Button>\n                  </div>\n                </TabPane>\n              </TabContent>\n            </form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ModalLoginPassword;\n"]},"metadata":{},"sourceType":"module"}