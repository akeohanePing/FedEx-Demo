{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/pages/profile-settings/communications-preferences.js\";\nimport React from 'react';\nimport { Container, Button, Form, FormGroup, Label, CustomInput } from 'reactstrap';\nimport classNames from \"classnames\"; // Components\n\nimport NavbarMain from '../../components/NavbarMain';\nimport WelcomeBar from '../../components/WelcomeBar';\nimport FooterMain from '../../components/FooterMain';\nimport AccountsSubnav from '../../components/AccountsSubnav';\nimport AccountsDropdown from '../../components/AccountsDropdown';\nimport AccountsSectionNav from '../../components/AccountsSectionNav';\nimport CardRewards from '../../components/CardRewards';\nimport Session from '../../components/Utils/Session';\n/* PING INTEGRATION: */\n\nimport PingOAuth from '../../components/Integration/PingOAuth';\n/* PING INTEGRATION: */\n\nimport PingData from '../../components/Integration/PingData';\n/* PING INTEGRATION: */\n// Data\n\nimport data from '../../data/profile-settings/communication-preferences.json';\nimport pingEndpoints from '../../data/ping-endpoints.json';\n/* PING INTEGRATION: */\n// Styles\n\nimport \"../../styles/pages/profile-settings/communication-preferences.scss\";\n\nclass CommunicationPreferences extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      sms: false,\n\n      /* PING INTEGRATION: */\n      smsChecked: false,\n\n      /* PING INTEGRATION: */\n      email: false,\n\n      /* PING INTEGRATION: */\n      emailChecked: false,\n\n      /* PING INTEGRATION: */\n      mail: false,\n\n      /* PING INTEGRATION: */\n      mailChecked: false,\n\n      /* PING INTEGRATION: */\n      consentId: \"0\"\n    };\n    this.showStep2 = this.showStep2.bind(this);\n    this.close = this.close.bind(this);\n    this.toggleConsent = this.toggleConsent.bind(this);\n    /* PING INTEGRATION: */\n\n    this.Session = new Session();\n    /* PING INTEGRATION: */\n\n    this.PingOAuth = new PingOAuth();\n    /* PING INTEGRATION: */\n\n    this.PingData = new PingData();\n    /* PING INTEGRATION: */\n\n    this.consentDef = \"share-comm-preferences\";\n    /* PING INTEGRATION: */\n  }\n\n  showStep2() {\n    /* BEGIN PING INTEGRATION */\n    if (this.state.consentId !== \"0\") {\n      //Updating existing consent record.\n      const consent = {\n        \"sms\": this.state.sms,\n        \"email\": this.state.email,\n        \"homeAddress\": this.state.mail\n      };\n      this.PingData.updateUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), consent, this.state.consentId, this.consentDef).then(response => response.json()).then(consentData => {\n        console.info(\"Updated user consent\", JSON.stringify(consentData));\n      }).catch(e => {\n        console.error(\"UpdateUserConsents Exception\", e);\n      });\n    } else {\n      //Creating new consent record.\n      const consent = {\n        \"sms\": this.state.sms,\n        \"email\": this.state.email,\n        \"homeAddress\": this.state.mail\n      };\n      this.PingData.createUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), consent, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n        console.info(\"Created user consent\", JSON.stringify(consentData));\n      }).catch(e => {\n        console.error(\"CreateUserConsents Exception\", e);\n      });\n    }\n    /* END PING INTEGRATION */\n\n\n    this.setState({\n      step: 2\n    });\n  }\n\n  close() {\n    this.setState({\n      step: 1\n    });\n  }\n  /* BEGIN PING INTEGRATION:  */\n  //this function sets state of comm. pref. selected soley based on event obj passed in during onclick.\n  // we extract the comm. type and consent pref. based on the substrings of the element ID. I.e \"sms_yes\".\n\n\n  toggleConsent(event) {\n    let consentState = {};\n    let checkedState = {};\n    const delimiterPos = event.target.id.indexOf(\"_\");\n    consentState[event.target.id.substring(0, delimiterPos)] = event.target.id.substring(delimiterPos + 1) == \"yes\" ? true : false;\n    this.setState(consentState);\n    checkedState[event.target.id.substring(0, delimiterPos) + \"Checked\"] = event.target.id.substring(delimiterPos + 1) == \"yes\" ? true : false;\n    this.setState(checkedState);\n  }\n  /* END PING INTEGRATION:  */\n\n  /* BEGIN PING INTEGRATION */\n\n\n  componentDidMount() {\n    if (this.Session.getAuthenticatedUserItem(\"AT\")) {\n      const token = this.Session.getAuthenticatedUserItem(\"AT\");\n      this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n        if (consentData.count > 0) {\n          this.setState({\n            // TODO this is probably overkill having a checked version of the consent. You could probably infer from the consent value.\n            sms: consentData._embedded.consents[0].data.sms,\n            email: consentData._embedded.consents[0].data.email,\n            mail: consentData._embedded.consents[0].data.homeAddress,\n            smsChecked: consentData._embedded.consents[0].data.sms == true ? true : false,\n            emailChecked: consentData._embedded.consents[0].data.email == true ? true : false,\n            mailChecked: consentData._embedded.consents[0].data.homeAddress == true ? true : false,\n            consentId: consentData._embedded.consents[0].id\n          });\n        }\n      }).catch(e => {\n        console.error(\"GetUserConsents Exception\", e);\n      });\n    } else {\n      this.PingOAuth.getToken({\n        uid: this.Session.getAuthenticatedUserItem(\"uid\"),\n        scopes: 'urn:pingdirectory:consent'\n      }).then(token => {\n        this.Session.setAuthenticatedUserItem(\"AT\", token); //for later reuse to reduce getToken calls.\n\n        this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n          if (consentData.count > 0) {\n            this.setState({\n              sms: consentData._embedded.consents[0].data.sms,\n              email: consentData._embedded.consents[0].data.email,\n              mail: consentData._embedded.consents[0].data.homeAddress,\n              smsChecked: consentData._embedded.consents[0].data.sms == true ? true : false,\n              emailChecked: consentData._embedded.consents[0].data.email == true ? true : false,\n              mailChecked: consentData._embedded.consents[0].data.homeAddress == true ? true : false,\n              consentId: consentData._embedded.consents[0].id\n            });\n          }\n        }).catch(e => {\n          console.error(\"GetUserConsents Exception\", e);\n        });\n      }).catch(e => {\n        console.error(\"GetToken Exception\", e);\n      });\n    }\n  }\n  /* END PING INTEGRATION */\n\n\n  render() {\n    let commDetails, commType;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accounts communication-preferences\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WelcomeBar, {\n      firstName: this.Session.getAuthenticatedUserItem(\"firstName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, Object.keys(data.subnav).map(key => {\n      return /*#__PURE__*/React.createElement(AccountsSubnav, {\n        key: data.subnav[key].title,\n        subnav: data.subnav[key],\n        pingendpoints: pingEndpoints,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      });\n    }), /*#__PURE__*/React.createElement(CardRewards, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accounts-hdr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, data.title), /*#__PURE__*/React.createElement(AccountsDropdown, {\n      text: data.dropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    })), this.state.step == 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module module-step1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, data.steps[0].title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, data.steps[0].description), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }, data.steps[0].table_title), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, Object.keys(data.steps[0].communication_types).map(index => {\n      commDetails = data.steps[0].communication_types[index].name == \"sms\" ? this.Session.getAuthenticatedUserItem(\"mobile\") : data.steps[0].communication_types[index].name == \"email\" ? this.Session.getAuthenticatedUserItem(\"email\") : this.Session.getAuthenticatedUserItem(\"fullAddress\");\n      commType = data.steps[0].communication_types[index].name;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        key: index,\n        className: classNames({\n          \"gray\": index % 2\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: data.steps[0].communication_types[index].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 31\n        }\n      }, data.steps[0].communication_types[index].label + '(' + commDetails + ')'), /*#__PURE__*/React.createElement(CustomInput, {\n        onChange: event => this.toggleConsent(event),\n        type: \"radio\",\n        id: `${data.steps[0].communication_types[index].name}_yes`,\n        name: data.steps[0].communication_types[index].name,\n        checked: this.state[commType + \"Checked\"],\n        label: \"Yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CustomInput, {\n        onChange: event => this.toggleConsent(event),\n        type: \"radio\",\n        id: `${data.steps[0].communication_types[index].name}_no`,\n        name: data.steps[0].communication_types[index].name,\n        checked: !this.state[commType + \"Checked\"],\n        label: \"No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 31\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"buttons submit-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.showStep2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: process.env.PUBLIC_URL + \"/banking/profile-settings\",\n      className: \"text-info cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, \"Cancel\")))), this.state.step == 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module module-step2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, data.steps[1].title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }\n    }, data.steps[1].description), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, data.steps[0].table_title), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 19\n      }\n    }, Object.keys(data.steps[1].communication_types).map(index => {\n      commDetails = data.steps[0].communication_types[index].name == \"sms\" ? this.Session.getAuthenticatedUserItem(\"mobile\") : data.steps[0].communication_types[index].name == \"email\" ? this.Session.getAuthenticatedUserItem(\"email\") : this.Session.getAuthenticatedUserItem(\"fullAddress\");\n      commType = data.steps[0].communication_types[index].name;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormGroup, {\n        key: index,\n        className: classNames({\n          \"gray\": index % 2\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        for: data.steps[0].communication_types[index].name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 31\n        }\n      }, data.steps[0].communication_types[index].label + '(' + commDetails + ')'), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: `${data.steps[0].communication_types[index].name}_yes`,\n        name: data.steps[0].communication_types[index].name,\n        checked: this.state[commType + \"Checked\"],\n        disabled: true,\n        label: \"Yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"radio\",\n        id: `${data.steps[0].communication_types[index].name}_no`,\n        name: data.steps[0].communication_types[index].name,\n        checked: !this.state[commType + \"Checked\"],\n        disabled: true,\n        label: \"No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: data.steps[1].other_things\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"buttons submit-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.close,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }\n    }, data.steps[1].btn_back))))))), /*#__PURE__*/React.createElement(FooterMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default CommunicationPreferences;","map":{"version":3,"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/pages/profile-settings/communications-preferences.js"],"names":["React","Container","Button","Form","FormGroup","Label","CustomInput","classNames","NavbarMain","WelcomeBar","FooterMain","AccountsSubnav","AccountsDropdown","AccountsSectionNav","CardRewards","Session","PingOAuth","PingData","data","pingEndpoints","CommunicationPreferences","Component","constructor","props","state","step","sms","smsChecked","email","emailChecked","mail","mailChecked","consentId","showStep2","bind","close","toggleConsent","consentDef","consent","updateUserConsent","getAuthenticatedUserItem","then","response","json","consentData","console","info","JSON","stringify","catch","e","error","createUserConsent","setState","event","consentState","checkedState","delimiterPos","target","id","indexOf","substring","componentDidMount","token","getUserConsents","count","_embedded","consents","homeAddress","getToken","uid","scopes","setAuthenticatedUserItem","render","commDetails","commType","Object","keys","subnav","map","key","title","dropdown","steps","description","table_title","communication_types","index","name","label","process","env","PUBLIC_URL","__html","other_things","btn_back"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  CustomInput,\n} from 'reactstrap';\nimport classNames from \"classnames\";\n\n// Components\nimport NavbarMain from '../../components/NavbarMain';\nimport WelcomeBar from '../../components/WelcomeBar';\nimport FooterMain from '../../components/FooterMain';\nimport AccountsSubnav from '../../components/AccountsSubnav';\nimport AccountsDropdown from '../../components/AccountsDropdown';\nimport AccountsSectionNav from '../../components/AccountsSectionNav';\nimport CardRewards from '../../components/CardRewards';\nimport Session from '../../components/Utils/Session'; /* PING INTEGRATION: */\nimport PingOAuth from '../../components/Integration/PingOAuth'; /* PING INTEGRATION: */\nimport PingData from '../../components/Integration/PingData'; /* PING INTEGRATION: */\n\n// Data\nimport data from '../../data/profile-settings/communication-preferences.json';\nimport pingEndpoints from '../../data/ping-endpoints.json'; /* PING INTEGRATION: */\n\n// Styles\nimport \"../../styles/pages/profile-settings/communication-preferences.scss\";\n\nclass CommunicationPreferences extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      sms: false,            /* PING INTEGRATION: */\n      smsChecked: false,    /* PING INTEGRATION: */\n      email: false,          /* PING INTEGRATION: */\n      emailChecked: false,  /* PING INTEGRATION: */\n      mail: false,             /* PING INTEGRATION: */\n      mailChecked: false,    /* PING INTEGRATION: */\n      consentId: \"0\"\n    };\n\n    this.showStep2 = this.showStep2.bind(this);\n    this.close = this.close.bind(this);\n    this.toggleConsent = this.toggleConsent.bind(this); /* PING INTEGRATION: */\n    this.Session = new Session(); /* PING INTEGRATION: */\n    this.PingOAuth = new PingOAuth(); /* PING INTEGRATION: */\n    this.PingData = new PingData(); /* PING INTEGRATION: */\n    this.consentDef = \"share-comm-preferences\"; /* PING INTEGRATION: */\n  }\n\n  showStep2() {\n    /* BEGIN PING INTEGRATION */\n    if (this.state.consentId !== \"0\") { //Updating existing consent record.\n      const consent = { \"sms\": this.state.sms, \"email\": this.state.email, \"homeAddress\": this.state.mail };\n      this.PingData.updateUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), consent, this.state.consentId, this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          console.info(\"Updated user consent\", JSON.stringify(consentData));\n          \n        })\n        .catch(e => {\n          console.error(\"UpdateUserConsents Exception\", e)\n        });\n    } else { //Creating new consent record.\n      const consent = { \"sms\": this.state.sms, \"email\": this.state.email, \"homeAddress\": this.state.mail };\n      this.PingData.createUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), consent, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          console.info(\"Created user consent\", JSON.stringify(consentData));\n        })\n        .catch(e => {\n          console.error(\"CreateUserConsents Exception\", e)\n        });\n    } /* END PING INTEGRATION */\n    this.setState({ step: 2 });\n  }\n\n  close() {\n    this.setState({ step: 1 });\n  }\n\n  /* BEGIN PING INTEGRATION:  */\n  //this function sets state of comm. pref. selected soley based on event obj passed in during onclick.\n  // we extract the comm. type and consent pref. based on the substrings of the element ID. I.e \"sms_yes\".\n  toggleConsent(event) {\n    let consentState = {};\n    let checkedState = {};\n    const delimiterPos = event.target.id.indexOf(\"_\");\n    consentState[event.target.id.substring(0, delimiterPos)] = event.target.id.substring(delimiterPos + 1) == \"yes\" ? true : false;\n    this.setState(consentState);\n    checkedState[event.target.id.substring(0, delimiterPos) + \"Checked\"] = event.target.id.substring(delimiterPos + 1) == \"yes\" ? true : false;\n    this.setState(checkedState);\n  }\n  /* END PING INTEGRATION:  */\n\n\n  /* BEGIN PING INTEGRATION */\n  componentDidMount() {\n    if (this.Session.getAuthenticatedUserItem(\"AT\")) {\n      const token = this.Session.getAuthenticatedUserItem(\"AT\");\n      this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          if (consentData.count > 0) {\n            this.setState({\n              // TODO this is probably overkill having a checked version of the consent. You could probably infer from the consent value.\n              sms: consentData._embedded.consents[0].data.sms,\n              email: consentData._embedded.consents[0].data.email,\n              mail: consentData._embedded.consents[0].data.homeAddress,\n              smsChecked: consentData._embedded.consents[0].data.sms == true ? true : false,\n              emailChecked: consentData._embedded.consents[0].data.email == true ? true : false,\n              mailChecked: consentData._embedded.consents[0].data.homeAddress == true ? true : false,\n              consentId: consentData._embedded.consents[0].id\n            });\n          }\n        })\n        .catch(e => {\n          console.error(\"GetUserConsents Exception\", e)\n        });\n    } else {\n      this.PingOAuth.getToken({ uid: this.Session.getAuthenticatedUserItem(\"uid\"), scopes: 'urn:pingdirectory:consent' })\n        .then(token => {\n          this.Session.setAuthenticatedUserItem(\"AT\", token); //for later reuse to reduce getToken calls.\n          this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n            .then(response => response.json())\n            .then(consentData => {\n              if (consentData.count > 0) {\n                this.setState({\n                  sms: consentData._embedded.consents[0].data.sms,\n                  email: consentData._embedded.consents[0].data.email,\n                  mail: consentData._embedded.consents[0].data.homeAddress,\n                  smsChecked: consentData._embedded.consents[0].data.sms == true ? true : false,\n                  emailChecked: consentData._embedded.consents[0].data.email == true ? true : false,\n                  mailChecked: consentData._embedded.consents[0].data.homeAddress == true ? true : false,\n                  consentId: consentData._embedded.consents[0].id\n                });\n              }\n            })\n            .catch(e => {\n              console.error(\"GetUserConsents Exception\", e)\n            });\n        })\n        .catch(e => {\n          console.error(\"GetToken Exception\", e);\n        });\n    }\n  }\n  /* END PING INTEGRATION */\n\n  render() {\n    let commDetails, commType;\n    return (\n      <div className=\"accounts communication-preferences\">\n        <NavbarMain />\n        <WelcomeBar firstName={this.Session.getAuthenticatedUserItem(\"firstName\")} /> {/* PING INTEGRATION; added prop */}\n        <Container>\n          <div className=\"inner\">\n            <div className=\"sidebar\">\n              {\n                Object.keys(data.subnav).map(key => {\n                  return (\n                    <AccountsSubnav key={data.subnav[key].title} subnav={data.subnav[key]} pingendpoints={pingEndpoints} />\n                  );\n                })\n              }\n              <CardRewards />\n            </div>\n            <div className=\"content\">\n              <div className=\"accounts-hdr\">\n                <h1>{data.title}</h1>\n                <AccountsDropdown text={data.dropdown} />\n              </div>\n              {this.state.step == 1 &&\n                <div className=\"module module-step1\">\n                  <h2>{data.steps[0].title}</h2>\n                  <p>{data.steps[0].description}</p>\n                  <h3>{data.steps[0].table_title}</h3>\n                  <Form>\n                    {\n                      Object.keys(data.steps[0].communication_types).map(index => {\n                        commDetails = data.steps[0].communication_types[index].name == \"sms\" ? this.Session.getAuthenticatedUserItem(\"mobile\") : data.steps[0].communication_types[index].name == \"email\" ? this.Session.getAuthenticatedUserItem(\"email\") : this.Session.getAuthenticatedUserItem(\"fullAddress\");\n                        commType = data.steps[0].communication_types[index].name;\n                        return (\n                          <>\n                            <FormGroup key={index} className={classNames({ \"gray\": (index % 2) })}>\n                              {/* PING INTEGRATION: modified label to display user data, and added onClicks to CustomInput */}\n                              <Label for={data.steps[0].communication_types[index].name}>{data.steps[0].communication_types[index].label + '(' + commDetails + ')'}</Label>\n                              <CustomInput onChange={(event) => this.toggleConsent(event)} type=\"radio\" id={`${data.steps[0].communication_types[index].name}_yes`} name={data.steps[0].communication_types[index].name} checked={this.state[commType + \"Checked\"]} label=\"Yes\" />\n                              <CustomInput onChange={(event) => this.toggleConsent(event)} type=\"radio\" id={`${data.steps[0].communication_types[index].name}_no`} name={data.steps[0].communication_types[index].name} checked={!this.state[commType + \"Checked\"]} label=\"No\" />\n                            </FormGroup>\n                          </>\n                        );\n                      })\n                    }\n                    <FormGroup className=\"buttons submit-buttons\">\n                      <Button color=\"primary\" onClick={this.showStep2}>Save</Button>\n                      <a href={process.env.PUBLIC_URL + \"/banking/profile-settings\"} className=\"text-info cancel\">Cancel</a>\n                    </FormGroup>\n                  </Form>\n                </div>\n              }\n              {this.state.step == 2 &&\n                <div className=\"module module-step2\">\n                  <h2 className=\"confirmation\">{data.steps[1].title}</h2>\n                  <p>{data.steps[1].description}</p>\n                  <h3>{data.steps[0].table_title}</h3>\n                  <Form>\n                    {\n                      Object.keys(data.steps[1].communication_types).map(index => {\n                        commDetails = data.steps[0].communication_types[index].name == \"sms\" ? this.Session.getAuthenticatedUserItem(\"mobile\") : data.steps[0].communication_types[index].name == \"email\" ? this.Session.getAuthenticatedUserItem(\"email\") : this.Session.getAuthenticatedUserItem(\"fullAddress\");\n                        commType = data.steps[0].communication_types[index].name;\n                        return (\n                          <>\n                            <FormGroup key={index} className={classNames({ \"gray\": (index % 2) })}>\n                              <Label for={data.steps[0].communication_types[index].name}>{data.steps[0].communication_types[index].label + '(' + commDetails + ')'}</Label>\n                              <CustomInput type=\"radio\" id={`${data.steps[0].communication_types[index].name}_yes`} name={data.steps[0].communication_types[index].name} checked={this.state[commType + \"Checked\"]} disabled label=\"Yes\" />\n                              <CustomInput type=\"radio\" id={`${data.steps[0].communication_types[index].name}_no`} name={data.steps[0].communication_types[index].name} checked={!this.state[commType + \"Checked\"]} disabled label=\"No\" />\n                            </FormGroup>\n                          </>\n                        );\n                      })\n                    }\n                    <div dangerouslySetInnerHTML={{ __html: data.steps[1].other_things }} />\n                    <FormGroup className=\"buttons submit-buttons\">\n                      <Button color=\"primary\" onClick={this.close}>{data.steps[1].btn_back}</Button>\n                    </FormGroup>\n                  </Form>\n                </div>\n              }\n            </div>\n          </div>\n        </Container>\n        <FooterMain />\n      </div>\n    )\n  }\n}\nexport default CommunicationPreferences"]},"metadata":{},"sourceType":"module"}