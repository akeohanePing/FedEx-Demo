{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/AccountsBalance/AccountsBalance.js\";\n// Packages\nimport React, { useState } from 'react';\nimport { Collapse, Button } from 'reactstrap'; // Styles\n\nimport \"./AccountsBalance.scss\";\n\nconst AccountsBalance = props => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const toggle = () => setIsOpen(!isOpen); //Formatting dollar amounts to currency for confirmation or deny screens.\n  //Defaulting to USA for now.\n  //TODO turn into call to GeoLocate component to format according to user's locale.\n\n\n  const currencyFormat = value => new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accounts-balance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accounts-balance-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, props.balance.title), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"See All Activity\")), /*#__PURE__*/React.createElement(Collapse, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Accounts\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"Balance\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, Object.keys(props.balance.accounts).map(key => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: props.balance.accounts[key].href,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, props.balance.accounts[key].account)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"$\", props.myAccounts.length > 0 && props.myAccounts[key].Amount.Amount));\n  })))));\n};\n\nexport default AccountsBalance;","map":{"version":3,"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/AccountsBalance/AccountsBalance.js"],"names":["React","useState","Collapse","Button","AccountsBalance","props","isOpen","setIsOpen","toggle","currencyFormat","value","Intl","NumberFormat","style","currency","format","balance","title","Object","keys","accounts","map","key","href","account","myAccounts","length","Amount"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAkC,YAAlC,C,CAEA;;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAEjC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,IAAD,CAApC;;AACA,QAAMO,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B,CAHiC,CAKjC;AACA;AACA;;;AACA,QAAMG,cAAc,GAAIC,KAAD,IACrB,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7BC,IAAAA,KAAK,EAAE,UADsB;AAE7BC,IAAAA,QAAQ,EAAE;AAFmB,GAA/B,EAGGC,MAHH,CAGUL,KAHV,CADF;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAEF,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BH,KAAK,CAACW,OAAN,CAAcC,KAA5C,CADF,eAEA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFA,CADF,eAKE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEX,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIY,MAAM,CAACC,IAAP,CAAYd,KAAK,CAACW,OAAN,CAAcI,QAA1B,EAAoCC,GAApC,CAAwCC,GAAG,IAAI;AAC7C,wBACE;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAG,MAAA,IAAI,EAAEjB,KAAK,CAACW,OAAN,CAAcI,QAAd,CAAuBE,GAAvB,EAA4BC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4ClB,KAAK,CAACW,OAAN,CAAcI,QAAd,CAAuBE,GAAvB,EAA4BE,OAAxE,CAAJ,CADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMnB,KAAK,CAACoB,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+BrB,KAAK,CAACoB,UAAN,CAAiBH,GAAjB,EAAsBK,MAAtB,CAA6BA,MAAlE,CAHF,CADF;AAOD,GARD,CAFJ,CAPF,CADF,CALF,CADF;AA+BD,CA7CD;;AA+CA,eAAevB,eAAf","sourcesContent":["// Packages\nimport React, { useState } from 'react';\nimport { Collapse, Button  } from 'reactstrap';\n\n// Styles\nimport \"./AccountsBalance.scss\";\n\nconst AccountsBalance = (props) => {\n  \n  const [isOpen, setIsOpen] = useState(true);\n  const toggle = () => setIsOpen(!isOpen);\n\n  //Formatting dollar amounts to currency for confirmation or deny screens.\n  //Defaulting to USA for now.\n  //TODO turn into call to GeoLocate component to format according to user's locale.\n  const currencyFormat = (value) =>\n    new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(value);\n\n  return (\n    <div className=\"accounts-balance\">\n      <div className=\"accounts-balance-header\">\n        <a href=\"#\" onClick={toggle}>{props.balance.title}</a>\n      <Button color=\"primary\">See All Activity</Button>\n      </div>\n      <Collapse isOpen={isOpen}>\n        <table>\n          <thead>\n            <tr>\n              <th>Accounts</th>\n              <th>Balance</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              Object.keys(props.balance.accounts).map(key => {\n                return (\n                  <tr key={key}>\n                    <td><a href={props.balance.accounts[key].href}>{props.balance.accounts[key].account}</a></td>\n                    {/* <td>{props.balance.accounts[key].balance} PING INTEGRATION: replaced this with below line.  */}\n                    <td>${props.myAccounts.length > 0 && props.myAccounts[key].Amount.Amount}</td>\n                  </tr>\n                );\n              })      \n            }\n          </tbody>\n        </table>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default AccountsBalance;\n"]},"metadata":{},"sourceType":"module"}