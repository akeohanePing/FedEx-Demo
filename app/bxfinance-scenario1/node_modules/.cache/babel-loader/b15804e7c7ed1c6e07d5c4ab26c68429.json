{"ast":null,"code":"import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";/** \nPING INTEGRATION:\nA recursive JSON search algorithm.\nOriginally written by shakhal in classic JS.\nRefactored to ES6 by dr-mohamed-benkhalifa.\n\n@author dr-mohamed-benkhalifa\n@see https://gist.github.com/shakhal/3cf5402fc61484d58c8d\n*/var JSONSearch=/*#__PURE__*/function(){function JSONSearch(){_classCallCheck(this,JSONSearch);}_createClass(JSONSearch,[{key:\"findValues\",/**\n    JSONSearch:\n    Find values by key in a JSON object.\n    \n    @param {object} obj The JSON object to be searched recursively.\n    @param {string} key The key for which to search.\n    @return {array} An array of search results.\n    */value:function findValues(obj,key){console.info(\"JSONSearch.js\",\"Recursively searching your object for \"+key);var list=[];if(!obj)return list;if(obj instanceof Array){for(var i in obj){list=list.concat(this.findValues(obj[i],key));}return list;}if(obj[key])list.push(obj[key]);if(typeof obj==\"object\"&&obj!==null){var children=Object.keys(obj);if(children.length>0){for(var _i=0;_i<children.length;_i++){list=list.concat(this.findValues(obj[children[_i]],key));}}}return list;}}]);return JSONSearch;}();;export default JSONSearch;","map":null,"metadata":{},"sourceType":"module"}