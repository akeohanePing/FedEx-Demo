{"ast":null,"code":"import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{useState}from'react';import{Container,Row,Col,Button,Form,FormGroup,Label,Input,CustomInput}from'reactstrap';import classNames from\"classnames\";// Components\nimport NavbarMain from'../../components/NavbarMain';import WelcomeBar from'../../components/WelcomeBar';import FooterMain from'../../components/FooterMain';import AccountsSubnav from'../../components/AccountsSubnav';import AccountsDropdown from'../../components/AccountsDropdown';import CardRewards from'../../components/CardRewards';import Session from'../../components/Utils/Session';/* PING INTEGRATION: */import PingOAuth from'../../components/Integration/PingOAuth';/* PING INTEGRATION: */import PingData from'../../components/Integration/PingData';/* PING INTEGRATION: */import{Link}from'react-router-dom';/* PING INTEGRATION: */ // Data\nimport data from'../../data/profile-settings/privacy-security.json';import pingEndpoints from'../../data/ping-endpoints.json';/* PING INTEGRATION: */ // Styles\nimport\"../../styles/pages/profile-settings/privacy-security.scss\";var PrivacySecurity=/*#__PURE__*/function(_React$Component){_inherits(PrivacySecurity,_React$Component);var _super=_createSuper(PrivacySecurity);function PrivacySecurity(props){var _this;_classCallCheck(this,PrivacySecurity);_this=_super.call(this,props);_this.state={step:1,isOpen:false,isModalOpen:false,anywealthadvisor:false,/* PING INTEGRATION: Whether they are giving consent to the Advisor */acct_0:0,/* PING INTEGRATION: Will store List of the user's 3 existing accounts */acct_1:0,/* PING INTEGRATION: The value will be the acct ID, updated in componentDidMount() */acct_2:0,/* PING INTEGRATION: The IDs are later correlated to consentedAccts. */consentedAccts:[],/* PING INTEGRATION: the acct IDs for which have been given consent. */consentId:\"0\"/* PING INTEGRATION: Id from the user's consent record, if one exists. */};_this.showStep1=_this.showStep1.bind(_assertThisInitialized(_this));_this.showStep2=_this.showStep2.bind(_assertThisInitialized(_this));_this.close=_this.close.bind(_assertThisInitialized(_this));_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.toggleModal=_this.toggleModal.bind(_assertThisInitialized(_this));_this.Session=new Session();/* PING INTEGRATION: */_this.PingOAuth=new PingOAuth();/* PING INTEGRATION: */_this.PingData=new PingData();/* PING INTEGRATION: */_this.consentDef=\"share-account-balances\";/* PING INTEGRATION: */return _this;}_createClass(PrivacySecurity,[{key:\"showStep1\",value:function showStep1(){this.setState({step:1});}},{key:\"showStep2\",value:function showStep2(){/* BEGIN PING INTEGRATION */if(this.state.consentId!==\"0\"){//User has a consent record, so update.\nconsole.info(\"Consent ID\",this.state.consentId);this.PingData.updateUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"),this.state.consentedAccts,this.state.consentId,this.consentDef).then(function(response){return response.json();}).then(function(consentData){console.info(\"Updated user consent\",JSON.stringify(consentData));}).catch(function(e){console.error(\"UpdateUserConsents Exception\",e);});}else{//User has no consent record, so create.\nconsole.info(\"Consent ID\",this.state.consentId);this.PingData.createUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"),this.state.consentedAccts,this.Session.getAuthenticatedUserItem(\"uid\"),this.consentDef).then(function(response){return response.json();}).then(function(consentData){console.info(\"Created user consent\",JSON.stringify(consentData));}).catch(function(e){console.error(\"CreateUserConsents Exception\",e);});}/* END PING INTEGRATION */this.setState({step:2});}},{key:\"close\",value:function close(){this.setState({step:1});}},{key:\"toggle\",value:function toggle(event){//Making sure we only open on yes and close on no and only if in the opposite state.\nif(event.target.id.includes(\"yes\")&&!this.state.isOpen){this.setState({isOpen:!this.state.isOpen,anywealthadvisor:true});}if(event.target.id.includes(\"no\")&&this.state.isOpen){this.setState({isOpen:!this.state.isOpen,anywealthadvisor:false,consentedAccts:[]});}}},{key:\"toggleModal\",value:function toggleModal(){this.setState({isModalOpen:!this.state.isModalOpen});}},{key:\"toggeAccount\",value:function toggeAccount(index,acctId){var consentedAcctsArr=this.state.consentedAccts;var acctPos=consentedAcctsArr.indexOf(acctId);if(acctPos>-1){// The acct clicked is already consented so we are removing consent.\nconsentedAcctsArr.splice(acctPos,1);}else{// The acct clicked was not consented so we are adding consent.\nconsentedAcctsArr.push(acctId);}this.setState({consentedAccts:consentedAcctsArr});}/* END PING INTEGRATION:  */ /* BEGIN PING INTEGRATION */},{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var acctState=[];var acctIDsArr=[];var consentState=[];var consentedAcctsArr=[];// Get the user's existing bank account IDs.\nvar acctIDs=this.Session.getAuthenticatedUserItem(\"accts\");acctIDsArr=acctIDs.split(\",\");//Update state with user's existing 3 bank account IDs\nacctIDsArr.forEach(function(acctId,index){acctState[\"acct_\"+index]=parseInt(acctId);});this.setState(acctState);if(this.Session.getAuthenticatedUserItem(\"AT\")){// TODO we should move the following code into a method. Duplicating it below based on whether we have a token or not is bad design. Error prone maintenance.\nvar token=this.Session.getAuthenticatedUserItem(\"AT\");this.PingData.getUserConsents(token,this.Session.getAuthenticatedUserItem(\"uid\"),this.consentDef).then(function(response){return response.json();}).then(function(consentData){console.info(\"Got user consents\",JSON.stringify(consentData));if(consentData.count>0){//Do we have a consent record? (There is no status if no record)\n_this2.setState({anywealthadvisor:consentData._embedded.consents[0].data[\"share-balance\"].length?true:false,consentId:consentData._embedded.consents[0].id});//loop over share-balance array updating account consent state.\n// This loop ensures we handle n number of accts on someones record to avoid complexity, \n// in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n// Otherwise the loop would need to exit after array[2].\nconsentedAcctsArr=consentData._embedded.consents[0].data[\"share-balance\"];consentedAcctsArr.forEach(function(acctId,index){//If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\nconsentState.push(acctId);});_this2.setState({consentedAccts:consentState,isOpen:consentData._embedded.consents[0].status===\"accepted\"?true:false});}}).catch(function(e){console.error(\"GetUserConsents Exception\",e);});}else{this.PingOAuth.getToken({uid:this.Session.getAuthenticatedUserItem(\"uid\"),scopes:'urn:pingdirectory:consent'}).then(function(token){_this2.Session.setAuthenticatedUserItem(\"AT\",token);//for later reuse to reduce getToken calls.\n_this2.PingData.getUserConsents(token,_this2.Session.getAuthenticatedUserItem(\"uid\"),_this2.consentDef).then(function(response){return response.json();}).then(function(consentData){console.info(\"Got user consents\",JSON.stringify(consentData));if(consentData.count>0){//Do we have a consent record? (There is no status if no record)\n_this2.setState({anywealthadvisor:consentData._embedded.consents[0].data[\"share-balance\"].length?true:false,consentId:consentData._embedded.consents[0].id});//loop over share-balance array updating account consent state.\n// This loop ensures we handle n number of accts on someones record to avoid complexity, \n// in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n// Otherwise the loop would need to exit after array[2].\nconsentedAcctsArr=consentData._embedded.consents[0].data[\"share-balance\"];consentedAcctsArr.forEach(function(acctId,index){//If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\nconsentState.push(acctId);});_this2.setState({consentedAccts:consentState,isOpen:consentData._embedded.consents[0].status===\"accepted\"?true:false});}}).catch(function(e){console.error(\"GetUserConsents Exception\",e);});}).catch(function(e){console.error(\"GetToken Exception\",e);});}}/* END PING INTEGRATION: */},{key:\"render\",value:function render(){var _this3=this;var partner1=data.steps[0].partners[0];var partner2=data.steps[0].partners[1];var partner3=data.steps[0].partners[2];var isChecked=false;/* PING INTEGRATION: */var consentedAcctsArr=[];return/*#__PURE__*/React.createElement(\"div\",{className:\"accounts privacy-security\"},/*#__PURE__*/React.createElement(NavbarMain,null),/*#__PURE__*/React.createElement(WelcomeBar,{firstName:this.Session.getAuthenticatedUserItem(\"firstName\")}),\" \",/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",{className:\"inner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar\"},Object.keys(data.subnav).map(function(key){return/*#__PURE__*/React.createElement(AccountsSubnav,{key:data.subnav[key].title,subnav:data.subnav[key],pingendpoints:pingEndpoints});}),/*#__PURE__*/React.createElement(CardRewards,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"accounts-hdr\"},/*#__PURE__*/React.createElement(\"h1\",null,data.title),/*#__PURE__*/React.createElement(AccountsDropdown,{text:data.dropdown})),/*#__PURE__*/React.createElement(\"div\",{className:\"module\"},this.state.step==1&&/*#__PURE__*/React.createElement(\"div\",{className:\"edit\"},/*#__PURE__*/React.createElement(\"h2\",null,data.steps[0].title),/*#__PURE__*/React.createElement(\"p\",null,data.steps[0].description),/*#__PURE__*/React.createElement(\"h3\",null,data.steps[0].table_title),/*#__PURE__*/React.createElement(Form,{className:\"edit\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"img\",{src:process.env.PUBLIC_URL+partner1.logo,alt:\"\"})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner1.name,\"_yes\"),name:partner1.name,label:\"Yes\"}),/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner1.name,\"_no\"),readOnly:true,checked:true,name:partner1.name,label:\"No\"})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",className:\"partner-overlay\",onClick:this.toggleModal},partner1.learn_more)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"gray\"},/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"img\",{src:process.env.PUBLIC_URL+partner2.logo,alt:\"\"})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner2.name,\"_yes\"),name:partner2.name,label:\"Yes\"}),/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner2.name,\"_no\"),readOnly:true,checked:true,name:partner2.name,label:\"No\"})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",className:\"partner-overlay\",onClick:this.toggleModal},partner2.learn_more)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"img\",{src:process.env.PUBLIC_URL+partner3.logo,alt:\"\"})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner3.name,\"_yes\"),checked:this.state[partner3.name],name:partner3.name,label:\"Yes\",onClick:this.toggle}),/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"\".concat(partner3.name,\"_no\"),checked:!this.state[partner3.name],name:partner3.name,label:\"No\",onClick:this.toggle})),/*#__PURE__*/React.createElement(Col,{md:12,lg:4},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",className:\"partner-overlay\",onClick:this.toggleModal},partner3.learn_more))),/*#__PURE__*/React.createElement(Row,{className:classNames(\"accounts-access\",{\"visible\":this.state.isOpen})},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"p\",null,partner3.permissions_hdr),Object.keys(partner3.permissions).map(function(index2){isChecked=_this3.state.consentedAccts.indexOf(_this3.state[\"acct_\"+index2])>-1?true:false;return/*#__PURE__*/React.createElement(FormGroup,{key:index2,check:true},/*#__PURE__*/React.createElement(Label,{className:\"custom-checkbox\",check:true},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",onClick:function onClick(){return _this3.toggeAccount(index2,_this3.state[\"acct_\"+index2]);},checked:isChecked}),\" \",partner3.permissions[index2].label,/*#__PURE__*/React.createElement(\"span\",{className:\"checkmark\"},/*#__PURE__*/React.createElement(\"span\",null))));}))),this.state.isModalOpen&&/*#__PURE__*/React.createElement(\"div\",{className:\"psmodal psmodal-anywealthadvisor\"},/*#__PURE__*/React.createElement(\"a\",{href:\"#\",className:\"close\",onClick:this.toggleModal},/*#__PURE__*/React.createElement(\"span\",{className:\"sr-only\"},\"Close\")),/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:partner3.modal}}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"buttons submit-buttons\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:this.showStep2},data.steps[0].btn_save),/*#__PURE__*/React.createElement(Link,{to:\"/banking/profile-settings\",className:\"text-info cancel\"},data.steps[0].btn_cancel))))))),this.state.step==2&&/*#__PURE__*/React.createElement(\"div\",{className:\"confirmation\"},/*#__PURE__*/React.createElement(\"h3\",null,data.steps[1].title),/*#__PURE__*/React.createElement(\"p\",null,data.steps[1].description),Object.keys(data.steps[1].partners).map(function(index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"form-header\"},data.steps[1].partners[index].title),/*#__PURE__*/React.createElement(Form,null,Object.keys(data.steps[1].partners[index].permissions).map(function(index2){var permission=data.steps[1].partners[index].permissions[index2];isChecked=_this3.state.consentedAccts.indexOf(_this3.state[\"acct_\"+index2])>-1?true:false;return/*#__PURE__*/React.createElement(FormGroup,{check:true},/*#__PURE__*/React.createElement(Label,{className:\"custom-checkbox\",check:true},/*#__PURE__*/React.createElement(Input,{type:\"checkbox\",checked:isChecked,disabled:true}),\" \",permission.label,/*#__PURE__*/React.createElement(\"span\",{class:\"checkmark\"},/*#__PURE__*/React.createElement(\"span\",null))));})),/*#__PURE__*/React.createElement(\"div\",{className:\"anywealthadvisor\"},/*#__PURE__*/React.createElement(\"p\",null,data.steps[1].partners[index].banner),/*#__PURE__*/React.createElement(Button,{href:data.steps[1].partners[index].cta_destination},data.steps[1].partners[index].cta_text)));}),/*#__PURE__*/React.createElement(\"div\",{dangerouslySetInnerHTML:{__html:data.steps[1].other_things}}),/*#__PURE__*/React.createElement(FormGroup,{className:\"buttons submit-buttons\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:this.showStep1},data.steps[1].btn_back))))))),/*#__PURE__*/React.createElement(FooterMain,null));}}]);return PrivacySecurity;}(React.Component);export default PrivacySecurity;","map":null,"metadata":{},"sourceType":"module"}