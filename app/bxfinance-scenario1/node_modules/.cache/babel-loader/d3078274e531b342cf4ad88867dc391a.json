{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ToggleSwitch/ToggleSwitch.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport './ToggleSwitch.scss';\n/*\nToggle Switch Component\nNote: id, checked and onChange are required for ToggleSwitch component to function.\nThe props name, small, disabled and optionLabels are optional.\nUsage: <ToggleSwitch id=\"id\" checked={value} onChange={checked => setValue(checked)}} />\n*/\n\nconst ToggleSwitch = ({\n  id,\n  name,\n  optionLabels,\n  small,\n  disabled\n}) => {\n  const [checked, changeCheck] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle-switch\" + (small ? \" small-switch\" : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: name,\n    className: \"toggle-switch-checkbox\",\n    id: id,\n    checked: checked,\n    onChange: e => changeCheck(e.target.checked),\n    disabled: disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), id ? /*#__PURE__*/React.createElement(\"label\", {\n    className: \"toggle-switch-label\",\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: disabled ? \"toggle-switch-inner toggle-switch-disabled\" : \"toggle-switch-inner\",\n    \"data-yes\": optionLabels[0],\n    \"data-no\": optionLabels[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: disabled ? \"toggle-switch-switch toggle-switch-disabled\" : \"toggle-switch-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })) : null);\n}; // Set optionLabels for rendering.\n\n\nToggleSwitch.defaultProps = {\n  optionLabels: [\"Yes\", \"No\"]\n};\nToggleSwitch.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  optionLabels: PropTypes.array,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default ToggleSwitch;","map":{"version":3,"sources":["/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ToggleSwitch/ToggleSwitch.js"],"names":["React","useState","PropTypes","ToggleSwitch","id","name","optionLabels","small","disabled","checked","changeCheck","e","target","defaultProps","propTypes","string","bool","onChange","func","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;AAEA;;;;;;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA;AAAjC,CAAD,KAAiD;AAClE,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,KAAD,CAAvC;AACF,sBACE;AAAK,IAAA,SAAS,EAAE,mBAAmBM,KAAK,GAAG,eAAH,GAAqB,EAA7C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAIE,IAAA,EAAE,EAAED,EAJN;AAKE,IAAA,OAAO,EAAEK,OALX;AAME,IAAA,QAAQ,EAAEE,CAAC,IAAID,WAAW,CAACC,CAAC,CAACC,MAAF,CAASH,OAAV,CAN5B;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUKJ,EAAE,gBACD;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAuC,IAAA,OAAO,EAAEA,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EACPI,QAAQ,GACJ,4CADI,GAEJ,qBAJR;AAME,gBAAUF,YAAY,CAAC,CAAD,CANxB;AAOE,eAASA,YAAY,CAAC,CAAD,CAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AACE,IAAA,SAAS,EACTE,QAAQ,GACJ,6CADI,GAEJ,sBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADC,GAmBC,IA7BR,CADF;AAiCD,CAnCD,C,CAqCA;;;AACAL,YAAY,CAACU,YAAb,GAA4B;AAC1BP,EAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,IAAR;AADY,CAA5B;AAIAH,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,EAAE,EAAEF,SAAS,CAACa,MADS;AAEvBN,EAAAA,OAAO,EAAEP,SAAS,CAACc,IAFI;AAGvBC,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,IAHG;AAIvBb,EAAAA,IAAI,EAAEH,SAAS,CAACa,MAJO;AAKvBT,EAAAA,YAAY,EAAEJ,SAAS,CAACiB,KALD;AAMvBZ,EAAAA,KAAK,EAAEL,SAAS,CAACc,IANM;AAOvBR,EAAAA,QAAQ,EAAEN,SAAS,CAACc;AAPG,CAAzB;AAUA,eAAeb,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport './ToggleSwitch.scss';\n\n/*\nToggle Switch Component\nNote: id, checked and onChange are required for ToggleSwitch component to function.\nThe props name, small, disabled and optionLabels are optional.\nUsage: <ToggleSwitch id=\"id\" checked={value} onChange={checked => setValue(checked)}} />\n*/\n\nconst ToggleSwitch = ({ id, name, optionLabels, small, disabled }) => {\n    const [checked, changeCheck] = useState(false)\n  return (\n    <div className={\"toggle-switch\" + (small ? \" small-switch\" : \"\")}>\n      <input\n        type=\"checkbox\"\n        name={name}\n        className=\"toggle-switch-checkbox\"\n        id={id}\n        checked={checked}\n        onChange={e => changeCheck(e.target.checked)}\n        disabled={disabled}\n        />\n        {id ? (\n          <label className=\"toggle-switch-label\" htmlFor={id}>\n            <span\n              className={\n                disabled\n                  ? \"toggle-switch-inner toggle-switch-disabled\"\n                  : \"toggle-switch-inner\"\n              }\n              data-yes={optionLabels[0]}\n              data-no={optionLabels[1]}\n            />\n            <span\n              className={\n              disabled\n                ? \"toggle-switch-switch toggle-switch-disabled\"\n                : \"toggle-switch-switch\"\n              }\n            />\n          </label>\n        ) : null}\n      </div>\n    );\n}\n\n// Set optionLabels for rendering.\nToggleSwitch.defaultProps = {\n  optionLabels: [\"Yes\", \"No\"],\n};\n\nToggleSwitch.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  optionLabels: PropTypes.array,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool\n};\n\nexport default ToggleSwitch;"]},"metadata":{},"sourceType":"module"}