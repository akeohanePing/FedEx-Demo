{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/pages/profile-settings/privacy-security.js\";\nimport React, { useState } from 'react';\nimport { Container, Row, Col, Button, Form, FormGroup, Label, Input, CustomInput } from 'reactstrap';\nimport classNames from \"classnames\"; // Components\n\nimport NavbarMain from '../../components/NavbarMain';\nimport WelcomeBar from '../../components/WelcomeBar';\nimport FooterMain from '../../components/FooterMain';\nimport AccountsSubnav from '../../components/AccountsSubnav';\nimport AccountsDropdown from '../../components/AccountsDropdown';\nimport CardRewards from '../../components/CardRewards';\nimport Session from '../../components/Utils/Session';\n/* PING INTEGRATION: */\n\nimport PingOAuth from '../../components/Integration/PingOAuth';\n/* PING INTEGRATION: */\n\nimport PingData from '../../components/Integration/PingData';\n/* PING INTEGRATION: */\n\nimport { Link } from 'react-router-dom';\n/* PING INTEGRATION: */\n// Data\n\nimport data from '../../data/profile-settings/privacy-security.json';\nimport pingEndpoints from '../../data/ping-endpoints.json';\n/* PING INTEGRATION: */\n// Styles\n\nimport \"../../styles/pages/profile-settings/privacy-security.scss\";\n\nclass PrivacySecurity extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      isOpen: false,\n      isModalOpen: false,\n      anywealthadvisor: false,\n\n      /* PING INTEGRATION: Whether they are giving consent to the Advisor */\n      acct_0: 0,\n\n      /* PING INTEGRATION: Will store List of the user's 3 existing accounts */\n      acct_1: 0,\n\n      /* PING INTEGRATION: The value will be the acct ID, updated in componentDidMount() */\n      acct_2: 0,\n\n      /* PING INTEGRATION: The IDs are later correlated to consentedAccts. */\n      consentedAccts: [],\n\n      /* PING INTEGRATION: the acct IDs for which have been given consent. */\n      consentId: \"0\"\n      /* PING INTEGRATION: Id from the user's consent record, if one exists. */\n\n    };\n    this.showStep1 = this.showStep1.bind(this);\n    this.showStep2 = this.showStep2.bind(this);\n    this.close = this.close.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.Session = new Session();\n    /* PING INTEGRATION: */\n\n    this.PingOAuth = new PingOAuth();\n    /* PING INTEGRATION: */\n\n    this.PingData = new PingData();\n    /* PING INTEGRATION: */\n\n    this.consentDef = \"share-account-balances\";\n    /* PING INTEGRATION: */\n  }\n\n  showStep1() {\n    this.setState({\n      step: 1\n    });\n  }\n\n  showStep2() {\n    /* BEGIN PING INTEGRATION */\n    if (this.state.consentId !== \"0\") {\n      //User has a consent record, so update.\n      console.info(\"Consent ID\", this.state.consentId);\n      this.PingData.updateUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), this.state.consentedAccts, this.state.consentId, this.consentDef).then(response => response.json()).then(consentData => {\n        console.info(\"Updated user consent\", JSON.stringify(consentData));\n      }).catch(e => {\n        console.error(\"UpdateUserConsents Exception\", e);\n      });\n    } else {\n      //User has no consent record, so create.\n      console.info(\"Consent ID\", this.state.consentId);\n      this.PingData.createUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), this.state.consentedAccts, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n        console.info(\"Created user consent\", JSON.stringify(consentData));\n      }).catch(e => {\n        console.error(\"CreateUserConsents Exception\", e);\n      });\n    }\n    /* END PING INTEGRATION */\n\n\n    this.setState({\n      step: 2\n    });\n  }\n\n  close() {\n    this.setState({\n      step: 1\n    });\n  }\n\n  toggle(event) {\n    //Making sure we only open on yes and close on no and only if in the opposite state.\n    if (event.target.id.includes(\"yes\") && !this.state.isOpen) {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        anywealthadvisor: true\n      });\n    }\n\n    if (event.target.id.includes(\"no\") && this.state.isOpen) {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        anywealthadvisor: false,\n        consentedAccts: []\n      });\n    }\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  toggeAccount(index, acctId) {\n    const consentedAcctsArr = this.state.consentedAccts;\n    const acctPos = consentedAcctsArr.indexOf(acctId);\n\n    if (acctPos > -1) {\n      // The acct clicked is already consented so we are removing consent.\n      consentedAcctsArr.splice(acctPos, 1);\n    } else {\n      // The acct clicked was not consented so we are adding consent.\n      consentedAcctsArr.push(acctId);\n    }\n\n    this.setState({\n      consentedAccts: consentedAcctsArr\n    });\n  }\n  /* END PING INTEGRATION:  */\n\n  /* BEGIN PING INTEGRATION */\n\n\n  componentDidMount() {\n    let acctState = [];\n    let acctIDsArr = [];\n    let consentState = [];\n    let consentedAcctsArr = []; // Get the user's existing bank account IDs.\n\n    let acctIDs = this.Session.getAuthenticatedUserItem(\"accts\");\n    acctIDsArr = acctIDs.split(\",\"); //Update state with user's existing 3 bank account IDs\n\n    acctIDsArr.forEach((acctId, index) => {\n      acctState[\"acct_\" + index] = parseInt(acctId);\n    });\n    this.setState(acctState);\n\n    if (this.Session.getAuthenticatedUserItem(\"AT\")) {\n      // TODO we should move the following code into a method. Duplicating it below based on whether we have a token or not is bad design. Error prone maintenance.\n      const token = this.Session.getAuthenticatedUserItem(\"AT\");\n      this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n        console.info(\"Got user consents\", JSON.stringify(consentData));\n\n        if (consentData.count > 0) {\n          //Do we have a consent record? (There is no status if no record)\n          this.setState({\n            anywealthadvisor: consentData._embedded.consents[0].data[\"share-balance\"].length ? true : false,\n            consentId: consentData._embedded.consents[0].id\n          }); //loop over share-balance array updating account consent state.\n          // This loop ensures we handle n number of accts on someones record to avoid complexity, \n          // in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n          // Otherwise the loop would need to exit after array[2].\n\n          consentedAcctsArr = consentData._embedded.consents[0].data[\"share-balance\"];\n          consentedAcctsArr.forEach((acctId, index) => {\n            //If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\n            consentState.push(acctId);\n          });\n          this.setState({\n            consentedAccts: consentState,\n            isOpen: consentData._embedded.consents[0].status === \"accepted\" ? true : false\n          });\n        }\n      }).catch(e => {\n        console.error(\"GetUserConsents Exception\", e);\n      });\n    } else {\n      this.PingOAuth.getToken({\n        uid: this.Session.getAuthenticatedUserItem(\"uid\"),\n        scopes: 'urn:pingdirectory:consent'\n      }).then(token => {\n        this.Session.setAuthenticatedUserItem(\"AT\", token); //for later reuse to reduce getToken calls.\n\n        this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef).then(response => response.json()).then(consentData => {\n          console.info(\"Got user consents\", JSON.stringify(consentData));\n\n          if (consentData.count > 0) {\n            //Do we have a consent record? (There is no status if no record)\n            this.setState({\n              anywealthadvisor: consentData._embedded.consents[0].data[\"share-balance\"].length ? true : false,\n              consentId: consentData._embedded.consents[0].id\n            }); //loop over share-balance array updating account consent state.\n            // This loop ensures we handle n number of accts on someones record to avoid complexity, \n            // in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n            // Otherwise the loop would need to exit after array[2].\n\n            consentedAcctsArr = consentData._embedded.consents[0].data[\"share-balance\"];\n            consentedAcctsArr.forEach((acctId, index) => {\n              //If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\n              consentState.push(acctId);\n            });\n            this.setState({\n              consentedAccts: consentState,\n              isOpen: consentData._embedded.consents[0].status === \"accepted\" ? true : false\n            });\n          }\n        }).catch(e => {\n          console.error(\"GetUserConsents Exception\", e);\n        });\n      }).catch(e => {\n        console.error(\"GetToken Exception\", e);\n      });\n    }\n  }\n  /* END PING INTEGRATION: */\n\n\n  render() {\n    const partner1 = data.steps[0].partners[0];\n    const partner2 = data.steps[0].partners[1];\n    const partner3 = data.steps[0].partners[2];\n    let isChecked = false;\n    /* PING INTEGRATION: */\n\n    let consentedAcctsArr = [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accounts privacy-security\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavbarMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WelcomeBar, {\n      firstName: this.Session.getAuthenticatedUserItem(\"firstName\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, Object.keys(data.subnav).map(key => {\n      return /*#__PURE__*/React.createElement(AccountsSubnav, {\n        key: data.subnav[key].title,\n        subnav: data.subnav[key],\n        pingendpoints: pingEndpoints,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }\n      });\n    }), /*#__PURE__*/React.createElement(CardRewards, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"accounts-hdr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, data.title), /*#__PURE__*/React.createElement(AccountsDropdown, {\n      text: data.dropdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"module\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 15\n      }\n    }, this.state.step == 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, data.steps[0].title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }\n    }, data.steps[0].description), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }\n    }, data.steps[0].table_title), /*#__PURE__*/React.createElement(Form, {\n      className: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + partner1.logo,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner1.name}_yes`,\n      name: partner1.name,\n      label: \"Yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner1.name}_no`,\n      readOnly: true,\n      checked: true,\n      name: partner1.name,\n      label: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"partner-overlay\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 49\n      }\n    }, partner1.learn_more)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + partner2.logo,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner2.name}_yes`,\n      name: partner2.name,\n      label: \"Yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner2.name}_no`,\n      readOnly: true,\n      checked: true,\n      name: partner2.name,\n      label: \"No\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"partner-overlay\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 49\n      }\n    }, partner2.learn_more)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + partner3.logo,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner3.name}_yes`,\n      checked: this.state[partner3.name],\n      name: partner3.name,\n      label: \"Yes\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: `${partner3.name}_no`,\n      checked: !this.state[partner3.name],\n      name: partner3.name,\n      label: \"No\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"partner-overlay\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 49\n      }\n    }, partner3.learn_more))), /*#__PURE__*/React.createElement(Row, {\n      className: classNames(\"accounts-access\", {\n        \"visible\": this.state.isOpen\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 31\n      }\n    }, partner3.permissions_hdr), Object.keys(partner3.permissions).map(index2 => {\n      isChecked = this.state.consentedAccts.indexOf(this.state[\"acct_\" + index2]) > -1 ? true : false;\n      return /*#__PURE__*/React.createElement(FormGroup, {\n        key: index2,\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: \"custom-checkbox\",\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"checkbox\",\n        onClick: () => this.toggeAccount(index2, this.state[\"acct_\" + index2]),\n        checked: isChecked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 41\n        }\n      }), \" \", partner3.permissions[index2].label, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"checkmark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 69\n        }\n      }))));\n    }))), this.state.isModalOpen && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"psmodal psmodal-anywealthadvisor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      className: \"close\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 88\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: partner3.modal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"buttons submit-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.showStep2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 31\n      }\n    }, data.steps[0].btn_save), /*#__PURE__*/React.createElement(Link, {\n      to: \"/banking/profile-settings\",\n      className: \"text-info cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 31\n      }\n    }, data.steps[0].btn_cancel))))))), this.state.step == 2 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"confirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, data.steps[1].title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, data.steps[1].description), Object.keys(data.steps[1].partners).map(index => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"form-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }, data.steps[1].partners[index].title), /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 29\n        }\n      }, Object.keys(data.steps[1].partners[index].permissions).map(index2 => {\n        const permission = data.steps[1].partners[index].permissions[index2];\n        isChecked = this.state.consentedAccts.indexOf(this.state[\"acct_\" + index2]) > -1 ? true : false;\n        return /*#__PURE__*/React.createElement(FormGroup, {\n          check: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          className: \"custom-checkbox\",\n          check: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(Input, {\n          type: \"checkbox\",\n          checked: isChecked,\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 41\n          }\n        }), \" \", permission.label, /*#__PURE__*/React.createElement(\"span\", {\n          class: \"checkmark\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 65\n          }\n        }))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"anywealthadvisor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 31\n        }\n      }, data.steps[1].partners[index].banner), /*#__PURE__*/React.createElement(Button, {\n        href: data.steps[1].partners[index].cta_destination,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 31\n        }\n      }, data.steps[1].partners[index].cta_text)));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: data.steps[1].other_things\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"buttons submit-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.showStep1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 23\n      }\n    }, data.steps[1].btn_back))))))), /*#__PURE__*/React.createElement(FooterMain, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default PrivacySecurity;","map":{"version":3,"sources":["/Users/michaelsanchez/projects/TechnicalEnablement/fedex/BXFinance-Apps/bxfinance-scenario1/src/pages/profile-settings/privacy-security.js"],"names":["React","useState","Container","Row","Col","Button","Form","FormGroup","Label","Input","CustomInput","classNames","NavbarMain","WelcomeBar","FooterMain","AccountsSubnav","AccountsDropdown","CardRewards","Session","PingOAuth","PingData","Link","data","pingEndpoints","PrivacySecurity","Component","constructor","props","state","step","isOpen","isModalOpen","anywealthadvisor","acct_0","acct_1","acct_2","consentedAccts","consentId","showStep1","bind","showStep2","close","toggle","toggleModal","consentDef","setState","console","info","updateUserConsent","getAuthenticatedUserItem","then","response","json","consentData","JSON","stringify","catch","e","error","createUserConsent","event","target","id","includes","toggeAccount","index","acctId","consentedAcctsArr","acctPos","indexOf","splice","push","componentDidMount","acctState","acctIDsArr","consentState","acctIDs","split","forEach","parseInt","token","getUserConsents","count","_embedded","consents","length","status","getToken","uid","scopes","setAuthenticatedUserItem","render","partner1","steps","partners","partner2","partner3","isChecked","Object","keys","subnav","map","key","title","dropdown","description","table_title","process","env","PUBLIC_URL","logo","name","learn_more","permissions_hdr","permissions","index2","label","__html","modal","btn_save","btn_cancel","permission","banner","cta_destination","cta_text","other_things","btn_back"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  CustomInput\n} from 'reactstrap';\nimport classNames from \"classnames\";\n\n// Components\nimport NavbarMain from '../../components/NavbarMain';\nimport WelcomeBar from '../../components/WelcomeBar';\nimport FooterMain from '../../components/FooterMain';\nimport AccountsSubnav from '../../components/AccountsSubnav';\nimport AccountsDropdown from '../../components/AccountsDropdown';\nimport CardRewards from '../../components/CardRewards';\nimport Session from '../../components/Utils/Session'; /* PING INTEGRATION: */\nimport PingOAuth from '../../components/Integration/PingOAuth'; /* PING INTEGRATION: */\nimport PingData from '../../components/Integration/PingData'; /* PING INTEGRATION: */\nimport { Link } from 'react-router-dom' /* PING INTEGRATION: */\n\n// Data\nimport data from '../../data/profile-settings/privacy-security.json';\nimport pingEndpoints from '../../data/ping-endpoints.json'; /* PING INTEGRATION: */\n\n// Styles\nimport \"../../styles/pages/profile-settings/privacy-security.scss\";\n\nclass PrivacySecurity extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      isOpen: false,\n      isModalOpen: false,\n      anywealthadvisor: false,           /* PING INTEGRATION: Whether they are giving consent to the Advisor */\n      acct_0: 0,                         /* PING INTEGRATION: Will store List of the user's 3 existing accounts */\n      acct_1: 0,                         /* PING INTEGRATION: The value will be the acct ID, updated in componentDidMount() */\n      acct_2: 0,                         /* PING INTEGRATION: The IDs are later correlated to consentedAccts. */\n      consentedAccts: [],                /* PING INTEGRATION: the acct IDs for which have been given consent. */\n      consentId: \"0\"                       /* PING INTEGRATION: Id from the user's consent record, if one exists. */\n    };\n\n    this.showStep1 = this.showStep1.bind(this);\n    this.showStep2 = this.showStep2.bind(this);\n    this.close = this.close.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.Session = new Session(); /* PING INTEGRATION: */\n    this.PingOAuth = new PingOAuth(); /* PING INTEGRATION: */\n    this.PingData = new PingData(); /* PING INTEGRATION: */\n    this.consentDef = \"share-account-balances\"; /* PING INTEGRATION: */\n  }\n\n  showStep1() {\n    this.setState({ step: 1 });\n  }\n\n  showStep2() {\n    /* BEGIN PING INTEGRATION */\n    if (this.state.consentId !== \"0\") {//User has a consent record, so update.\n      console.info(\"Consent ID\", this.state.consentId);\n      this.PingData.updateUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), this.state.consentedAccts, this.state.consentId, this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          console.info(\"Updated user consent\", JSON.stringify(consentData));\n        })\n        .catch(e => {\n          console.error(\"UpdateUserConsents Exception\", e)\n        });\n    } else { //User has no consent record, so create.\n      console.info(\"Consent ID\", this.state.consentId);\n      this.PingData.createUserConsent(this.Session.getAuthenticatedUserItem(\"AT\"), this.state.consentedAccts, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          console.info(\"Created user consent\", JSON.stringify(consentData));\n        })\n        .catch(e => {\n          console.error(\"CreateUserConsents Exception\", e)\n        });\n    } /* END PING INTEGRATION */\n    this.setState({ step: 2 });\n  }\n\n  close() {\n    this.setState({ step: 1 });\n  }\n\n  toggle(event) {\n    //Making sure we only open on yes and close on no and only if in the opposite state.\n    if (event.target.id.includes(\"yes\") && !this.state.isOpen) {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        anywealthadvisor: true\n      });\n    }\n    if (event.target.id.includes(\"no\") && this.state.isOpen) {\n      this.setState({\n        isOpen: !this.state.isOpen,\n        anywealthadvisor: false,\n        consentedAccts: []\n      });\n    }\n\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  toggeAccount(index, acctId) {\n    const consentedAcctsArr = this.state.consentedAccts;\n    const acctPos = consentedAcctsArr.indexOf(acctId)\n    if (acctPos > -1) {// The acct clicked is already consented so we are removing consent.\n      consentedAcctsArr.splice(acctPos, 1)\n    } else {// The acct clicked was not consented so we are adding consent.\n      consentedAcctsArr.push(acctId);\n    }\n    this.setState({ consentedAccts: consentedAcctsArr });\n  }\n  /* END PING INTEGRATION:  */\n\n\n  /* BEGIN PING INTEGRATION */\n  componentDidMount() {\n    let acctState = [];\n    let acctIDsArr = [];\n    let consentState = [];\n    let consentedAcctsArr = [];\n    // Get the user's existing bank account IDs.\n    \n    let acctIDs = this.Session.getAuthenticatedUserItem(\"accts\");\n    acctIDsArr = acctIDs.split(\",\");\n\n    //Update state with user's existing 3 bank account IDs\n    acctIDsArr.forEach((acctId, index) => {\n      acctState[\"acct_\" + index] = parseInt(acctId);\n    });\n    this.setState(acctState);\n\n    if (this.Session.getAuthenticatedUserItem(\"AT\")) {\n      // TODO we should move the following code into a method. Duplicating it below based on whether we have a token or not is bad design. Error prone maintenance.\n      const token = this.Session.getAuthenticatedUserItem(\"AT\");\n      this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n        .then(response => response.json())\n        .then(consentData => {\n          console.info(\"Got user consents\", JSON.stringify(consentData));\n          if (consentData.count > 0) { //Do we have a consent record? (There is no status if no record)\n            this.setState({\n              anywealthadvisor: consentData._embedded.consents[0].data[\"share-balance\"].length ? true : false,\n              consentId: consentData._embedded.consents[0].id\n            });\n            //loop over share-balance array updating account consent state.\n            // This loop ensures we handle n number of accts on someones record to avoid complexity, \n            // in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n            // Otherwise the loop would need to exit after array[2].\n            consentedAcctsArr = consentData._embedded.consents[0].data[\"share-balance\"];\n            consentedAcctsArr.forEach((acctId, index) => {\n              //If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\n              consentState.push(acctId);\n\n            });\n            this.setState({\n              consentedAccts: consentState,\n              isOpen: consentData._embedded.consents[0].status === \"accepted\" ? true : false\n            });\n          }\n        })\n        .catch(e => {\n          console.error(\"GetUserConsents Exception\", e)\n        });\n    } else {\n      this.PingOAuth.getToken({ uid: this.Session.getAuthenticatedUserItem(\"uid\"), scopes: 'urn:pingdirectory:consent' })\n        .then(token => {\n          this.Session.setAuthenticatedUserItem(\"AT\", token); //for later reuse to reduce getToken calls.\n          this.PingData.getUserConsents(token, this.Session.getAuthenticatedUserItem(\"uid\"), this.consentDef)\n            .then(response => response.json())\n            .then(consentData => {\n              console.info(\"Got user consents\", JSON.stringify(consentData));\n              if (consentData.count > 0) { //Do we have a consent record? (There is no status if no record)\n                this.setState({\n                  anywealthadvisor: consentData._embedded.consents[0].data[\"share-balance\"].length ? true : false,\n                  consentId: consentData._embedded.consents[0].id\n                });\n                //loop over share-balance array updating account consent state.\n                // This loop ensures we handle n number of accts on someones record to avoid complexity, \n                // in case we get more than 3 accts in the future. (We dont control the OpenBanking Mock API). \n                // Otherwise the loop would need to exit after array[2].\n                consentedAcctsArr = consentData._embedded.consents[0].data[\"share-balance\"];\n                consentedAcctsArr.forEach((acctId, index) => {\n                  //If the acct ID exists, then they've given consent. These state items are later correlated with the existing acct IDs already set.\n                  consentState.push(acctId);\n\n                });\n                this.setState({\n                  consentedAccts: consentState,\n                  isOpen: consentData._embedded.consents[0].status === \"accepted\" ? true : false\n                });\n              }\n            })\n            .catch(e => {\n              console.error(\"GetUserConsents Exception\", e)\n            });\n        })\n        .catch(e => {\n          console.error(\"GetToken Exception\", e);\n        });\n    }\n  }\n  /* END PING INTEGRATION: */\n\n  render() {\n    const partner1 = data.steps[0].partners[0];\n    const partner2 = data.steps[0].partners[1];\n    const partner3 = data.steps[0].partners[2];\n    let isChecked = false; /* PING INTEGRATION: */\n    let consentedAcctsArr = [];\n\n    return (\n      <div className=\"accounts privacy-security\">\n        <NavbarMain />\n        <WelcomeBar firstName={this.Session.getAuthenticatedUserItem(\"firstName\")} /> {/* PING INTEGRATION: added passing of firstName prop. */}\n        <Container>\n          <div className=\"inner\">\n            <div className=\"sidebar\">\n              {\n                Object.keys(data.subnav).map(key => {\n                  return (\n                    <AccountsSubnav key={data.subnav[key].title} subnav={data.subnav[key]} pingendpoints={pingEndpoints} />\n                  );\n                })\n              }\n              <CardRewards />\n            </div>\n            <div className=\"content\">\n              <div className=\"accounts-hdr\">\n                <h1>{data.title}</h1>\n                <AccountsDropdown text={data.dropdown} />\n              </div>\n              <div className=\"module\">\n                {this.state.step == 1 &&\n                  <div className=\"edit\">\n                    <h2>{data.steps[0].title}</h2>\n                    <p>{data.steps[0].description}</p>\n                    <h3>{data.steps[0].table_title}</h3>\n                    <Form className=\"edit\">\n                      <Container>\n                        <div>\n                          <Row>\n                            <Col md={12} lg={4}><img src={process.env.PUBLIC_URL + partner1.logo} alt=\"\" /></Col>\n                            <Col md={12} lg={4}>\n                              <CustomInput type=\"radio\" id={`${partner1.name}_yes`} name={partner1.name} label=\"Yes\" />\n                              <CustomInput type=\"radio\" id={`${partner1.name}_no`} readOnly checked name={partner1.name} label=\"No\" />\n                            </Col>\n                            <Col md={12} lg={4}><a href=\"#\" className=\"partner-overlay\" onClick={this.toggleModal}>{partner1.learn_more}</a></Col>{/* TODO add back Learn More modal popup */}\n                          </Row>\n                        </div>\n                        <div>\n                          <Row className=\"gray\">\n                            <Col md={12} lg={4}><img src={process.env.PUBLIC_URL + partner2.logo} alt=\"\" /></Col>\n                            <Col md={12} lg={4}>\n                              <CustomInput type=\"radio\" id={`${partner2.name}_yes`} name={partner2.name} label=\"Yes\" />\n                              <CustomInput type=\"radio\" id={`${partner2.name}_no`} readOnly checked name={partner2.name} label=\"No\" />\n                            </Col>\n                            <Col md={12} lg={4}><a href=\"#\" className=\"partner-overlay\" onClick={this.toggleModal}>{partner2.learn_more}</a></Col>{/* TODO add back Learn More modal popup */}\n                          </Row>\n                        </div>\n                        {/* PING INTEGRATION: This block \"partner3\" is only partner block modified for demos. The others are static.  */}\n                        <div>\n                          <Row>\n                            <Col md={12} lg={4}><img src={process.env.PUBLIC_URL + partner3.logo} alt=\"\" /></Col>\n                            <Col md={12} lg={4}>\n                              <CustomInput type=\"radio\" id={`${partner3.name}_yes`} checked={this.state[partner3.name]} name={partner3.name} label=\"Yes\" onClick={this.toggle} />\n                              <CustomInput type=\"radio\" id={`${partner3.name}_no`} checked={!this.state[partner3.name]} name={partner3.name} label=\"No\" onClick={this.toggle} />\n                            </Col>\n                            <Col md={12} lg={4}><a href=\"#\" className=\"partner-overlay\" onClick={this.toggleModal}>{partner3.learn_more}</a></Col>\n                          </Row>\n                          <Row className={classNames(\"accounts-access\", { \"visible\": this.state.isOpen })}>\n                            <Col>\n                              <p>{partner3.permissions_hdr}</p>\n                              {\n                                Object.keys(partner3.permissions).map(index2 => {\n                                  isChecked = this.state.consentedAccts.indexOf(this.state[\"acct_\" + index2]) > -1 ? true : false;\n                                  return (\n                                    <FormGroup key={index2} check>\n                                      <Label className=\"custom-checkbox\" check>\n                                        <Input type=\"checkbox\" onClick={() => this.toggeAccount(index2, this.state[\"acct_\" + index2])} checked={isChecked} /> {partner3.permissions[index2].label}\n                                        <span className=\"checkmark\"><span></span></span>\n                                      </Label>\n                                    </FormGroup>\n                                  )\n                                })\n                              }\n                            </Col>\n                          </Row>\n                          {this.state.isModalOpen &&\n                            <div className=\"psmodal psmodal-anywealthadvisor\">\n                              <a href=\"#\" className=\"close\" onClick={this.toggleModal}><span className=\"sr-only\">Close</span></a>\n                              <div dangerouslySetInnerHTML={{ __html: partner3.modal }} />\n                            </div>\n                          }\n                        </div>\n\n                        <Row>\n                          <Col>\n                            <FormGroup className=\"buttons submit-buttons\">\n                              <Button color=\"primary\" onClick={this.showStep2}>{data.steps[0].btn_save}</Button>\n                              {/* <a href=\"/banking/profile-settings\" className=\"text-info cancel\">{data.steps[0].btn_cancel}</a> */}\n                              <Link to=\"/banking/profile-settings\" className=\"text-info cancel\">{data.steps[0].btn_cancel}</Link>\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                      </Container>\n                    </Form>\n                  </div>\n                }\n                {this.state.step == 2 &&\n                  <div className=\"confirmation\">\n                    <h3>{data.steps[1].title}</h3>\n                    <p>{data.steps[1].description}</p>\n                    {\n                      Object.keys(data.steps[1].partners).map(index => {\n                        return (\n                          <>\n                            <p className=\"form-header\">{data.steps[1].partners[index].title}</p>\n                            <Form>\n                              {\n                                Object.keys(data.steps[1].partners[index].permissions).map(index2 => {\n                                  const permission = data.steps[1].partners[index].permissions[index2];\n                                  isChecked = this.state.consentedAccts.indexOf(this.state[\"acct_\" + index2]) > -1 ? true : false;\n                                  return (\n                                    <FormGroup check>\n                                      <Label className=\"custom-checkbox\" check>\n                                        <Input type=\"checkbox\" checked={isChecked} disabled /> {permission.label}\n                                        <span class=\"checkmark\"><span></span></span>\n                                      </Label>\n                                    </FormGroup>\n                                  )\n                                })\n                              }\n                            </Form>\n                            <div className=\"anywealthadvisor\">\n                              <p>{data.steps[1].partners[index].banner}</p>\n                              <Button href={data.steps[1].partners[index].cta_destination}>{data.steps[1].partners[index].cta_text}</Button>\n                            </div>\n                          </>\n                        );\n                      })\n                    }\n                    <div dangerouslySetInnerHTML={{ __html: data.steps[1].other_things }} />\n                    <FormGroup className=\"buttons submit-buttons\">\n                      <Button color=\"primary\" onClick={this.showStep1}>{data.steps[1].btn_back}</Button>\n                    </FormGroup>\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        </Container>\n        <FooterMain />\n      </div>\n    )\n  }\n}\nexport default PrivacySecurity\n"]},"metadata":{},"sourceType":"module"}