{"ast":null,"code":"import _classCallCheck from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* eslint react/no-multi-comp: 0, react/prop-types: 0 */ // Packages\nimport React from'react';import{Button,Modal,ModalHeader,ModalBody,FormGroup,Label,Input,CustomInput,TabContent,TabPane}from'reactstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCircleNotch}from'@fortawesome/free-solid-svg-icons';import ButtonMaterial from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';// Components\nimport FormPassword from'../../components/FormPassword';import PingAuthN from'../Integration/PingAuthN';/* PING INTEGRATION */import Session from'../Utils/Session';/* PING INTEGRATION: */ // External scripts\nimport{injectExternalScript}from'../Utils/injectExternalScript';// Styles\nimport\"./ModalLoginPassword.scss\";// Data\nimport data from'./data.json';var ModalLoginPassword=/*#__PURE__*/function(_React$Component){_inherits(ModalLoginPassword,_React$Component);var _super=_createSuper(ModalLoginPassword);function ModalLoginPassword(){var _this;_classCallCheck(this,ModalLoginPassword);_this=_super.call(this);_this.deviceExists=function(type){var deviceFound=false;var deviceListFlat=_this.state.deviceList.flat();if(deviceListFlat.indexOf(type)>-1){deviceFound=true;}return deviceFound;};_this.state={isOpen:false,activeTab:'1',loginMethodUnset:true,loginMethodFormGroupClass:'',deviceRef:\"\",/* PING INTEGRATION: Selected device's Id */deviceName:\"\",/* PING INTEGRATION: Device name if using mobile app. I.e. iPhone XS Max */loginMethod:\"\",/* PING INTEGRATION: SMS, Email, iPhone, TOTP */loginTarget:\"\",/* PING INTEGRATION: number or email of selected login method. */deviceList:[],/* PING INTEGRATION: */otp:\"\",/* PING INTEGRATION: */userName:\"\",/* PING INTEGRATION: */swaprods:\"\",/* PING INTEGRATION: */loginError:false,/* PING INTEGRATION: */loginErrorMsg:\"\",/* PING INTEGRATION: */rememberMe:\"\",/* PING INTEGRATION: */deviceProfile:{}/* PING INTEGRATION: */};_this.PingAuthN=new PingAuthN();/* PING INTEGRATION: */_this.Session=new Session();/* PING INTEGRATION: */_this.buildDeviceProfile=_this.buildDeviceProfile.bind(_assertThisInitialized(_this));/* PING INTEGRATION: */_this.deviceProfileString='';/* PING INTEGRATION: */return _this;}/* BEGIN PING INTEGRATION: */ // function as class property. // Note: Per reactjs.org this syntax is experimental and not standardized yet. (Stage 3 proposal).\n//Used to update device selection tabPane based on user's list of paired devices.\n_createClass(ModalLoginPassword,[{key:\"onClosed\",/* END PING INTEGRATION: */value:function onClosed(){this.setState({activeTab:'1',loginMethodUnset:true,loginMethodFormGroupClass:''});}},{key:\"toggle\",value:function toggle(userName){this.setState({isOpen:!this.state.isOpen,userName:userName});}},{key:\"toggleTab\",value:function toggleTab(tab){/* BEGIN PING INTEGRATION: We're letting PF handle SSPR to demo Velocity templates. */if(tab=='4'){window.location.assign(data.pfAcctRecoveryURI);}else if(tab=='5'){window.location.assign(data.pfPwdResetURI);}else{/* END PING INTEGRATION */this.setState({activeTab:tab});}}},{key:\"setLoginMethod\",value:function setLoginMethod(event){/* BEGIN PING INTEGRATION: had to make this kind of polymorphic due to a late feature add of the \"default device\" concept in P1MFA. */var deviceSelection=\"\";var deviceId=\"\";var deviceRefIndex;var target=\"\";var name=\"\";var deviceList=this.state.deviceList;if(typeof event===\"string\"){//This will be the defaulted device Id.\ndeviceId=event;deviceRefIndex=deviceList.findIndex(function(element,index){return element.includes(deviceId);});deviceSelection=deviceList[deviceRefIndex][0];}else{//We got the selected device from the user in the device selection UI.\nvar delimiterPos=event.target.id.lastIndexOf(\"_\");deviceSelection=event.target.id.substring(delimiterPos+1);deviceRefIndex=deviceList.findIndex(function(element,index){return element.includes(deviceSelection);});deviceId=deviceList[deviceRefIndex][1];}deviceRefIndex=deviceList.findIndex(function(element,index){return element.includes(deviceSelection);});target=deviceList[deviceRefIndex][2];name=deviceList[deviceRefIndex][3];this.setState(function(previousState){//TODO not referencing previousState anymore. should get rid of this and just do standard setState instead of arrow function.\nreturn{deviceRef:deviceId,loginTarget:target,loginMethod:deviceSelection,deviceName:name,loginMethodUnset:false,loginMethodFormGroupClass:'form-group-light'//Doubt we need this. Was probably T3 placeholder since they didn't know how we would Implement Ping integration.\n};});/* END PING INTEGRATION: */}/* BEGIN PING INTEGRATION: */ // Controlled input for the Remember Me checkbox.\n//If they check it, we save their username to a cookie for the next time they log in.\n//ModalLogin.js will check for cookies and prepop the username field.\n},{key:\"handleRememberMeChange\",value:function handleRememberMeChange(){var _this2=this;this.setState(function(prevState){if(prevState.rememberMe){document.cookie=\"rememberMe=\";}else{document.cookie=\"rememberMe=\"+_this2.state.userName;}return{rememberMe:!prevState.rememberMe};});}// This is used as a callback function to the child component FormPassword.\n},{key:\"handlePswdChange\",value:function handlePswdChange(event){this.setState({swaprods:event.target.value},function(){});}},{key:\"handleOTPChange\",value:function handleOTPChange(event){// grabbing whatever the user is typing in the OTP form as they type, and\n// saving it to state. (Controlled input).\nthis.setState({otp:event.target.value});}},{key:\"handleEmailChange\",value:function handleEmailChange(event){//This is not used since PF is handling SSPR to demo Velocity templates.\n// Keeping it here in case Velocity templates get nixed from demos.\n// Grabbing whatever the user is typing in the email form as they type, and\n// saving it to state.\nthis.setState({email:event.target.value});}//When user clicks \"Next\".\n// Handler for various TabPane UIs.\n// TODO T3 used numeric IDs for the TabPanes in render(). With our handler, \n// it would be easier to visually map in the code if they had text IDs related to the UI of the TabPane. I.e. \"IDF\", \"Devices\", etc.\n},{key:\"handleSubmit\",value:function handleSubmit(tab){var _this3=this;// Clear error state for next pass through.\nthis.setState({loginError:false,loginErrorMsg:\"\"});var pswd=tab=='2'?this.state.swaprods:\"WTF?\";//TODO Do we care about the tab param here? Toss?\nvar cachedFlowResponse=JSON.parse(this.Session.getAuthenticatedUserItem(\"flowResponse\"));if(pswd){//TODO do we need this test anymore?\nvar _data=\"\";switch(tab){case\"1\":// Usernmae/password form. This is the default state. Will probably never be called from here.\nthis.toggleTab(\"1\");break;case\"2\":this.PingAuthN.handleAuthNflow({flowResponse:cachedFlowResponse,swaprods:this.state.swaprods,rememberMe:this.state.rememberMe}).then(function(response){return response.json();}).then(function(jsonResults){//We only want to cache the flow response if it has a status. Otherwise it's an error of some kind.\nif(jsonResults.status){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResults));}if(jsonResults.status===\"RESUME\"){_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResults});//Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n}else if(jsonResults.status==\"DEVICE_PROFILE_REQUIRED\"){console.info(\"ModalLoginPassword.js\",\"PingOne Risk eval needs device profile.\");window.profileDevice(_this3.buildDeviceProfile);//BEGIN DELAY: P1Risk device profiling scripts take just long enough to run that we were trying to send the profile to the authN API before we had it.\nvar intervalId=setInterval(function(){_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResults,body:_this3.deviceProfileString}).then(function(response){return response.json();}).then(function(jsonResponse){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResponse));if(jsonResponse.status===\"RESUME\"){clearTimeout(intervalId);_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResponse});//Don't need to do anything more than call handleAuthNFlow(). RESUME always results in a redireect to the TargetResource.\n}else if(jsonResponse.status===\"AUTHENTICATION_REQUIRED\"){clearTimeout(intervalId);_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResponse,body:\"\"}).then(function(response){return response.json();}).then(function(jsonResponse){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResponse));// We always get back a list of devices whether they have a default or not.\nvar devices=jsonResponse.devices.map(function(device){return[device.type,device.id,device.target,device.name];});_this3.setState({deviceList:devices});//Because we might have a default device in P1MFA.\nif(jsonResponse.selectedDeviceRef){_this3.setLoginMethod(jsonResponse.selectedDeviceRef.id);}if(jsonResponse.status===\"DEVICE_SELECTION_REQUIRED\"){_this3.toggleTab(tab);//If we're below here it's because the user has a default device in P1MFA.\n}else if(jsonResponse.status===\"OTP_REQUIRED\"){_this3.toggleTab(\"3\");}else{// This assumes their default device response was PUSH_CONFIRMATION_WAITING\n_this3.toggleTab(\"7\");_this3.handleSubmit(\"7\");}});}});},1000,jsonResults,_this3.deviceProfileString);//END DELAY.\n}else if(jsonResults.code==\"VALIDATION_ERROR\"){console.info(\"Validation Error\",jsonResults.details[0].userMessage);_this3.setState({loginError:true,loginErrorMsg:jsonResults.details[0].userMessage});}else{throw\"Flow Status Exception: Unexpected status.\";//TODO This is probably a corner case, but we need to use ModalError.js for this.\n}}).catch(function(e){console.error(\"handleAuthNFlow() Exception:\",e);});break;case\"3\":_data=this.state.deviceRef;this.PingAuthN.handleAuthNflow({flowResponse:cachedFlowResponse,body:_data}).then(function(response){return response.json();}).then(function(jsonResult){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResult));//TODO is there a better solution for this?\nif(jsonResult.status===\"OTP_REQUIRED\"){_this3.toggleTab(tab);}else if(jsonResult.status===\"PUSH_CONFIRMATION_WAITING\"){_this3.handleSubmit(\"7\");}}).catch(function(e){console.error(\"handleAuthNflow exception:\",e);});break;case\"4\":// We should never hit this case since PF is handling SSPR.\n// Need implementation if we move SSPR to authN API.\n// @see this.toggleTab(tab);\nbreak;case\"5\":// We should never hit this case since PF is handling SSPR.\n// Need implementation if we move SSPR to authN API.\n// @see this.toggleTab(tab);\nbreak;case\"6\":// Tab 6 is newly created for OTP submitted/success.\n_data=this.state.otp;this.toggleTab(tab);this.PingAuthN.handleAuthNflow({flowResponse:cachedFlowResponse,body:_data}).then(function(response){return response.json();}).then(function(jsonResponse){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResponse));if(jsonResponse.status===\"MFA_COMPLETED\"){_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResponse,body:\"\"}).then(function(response){return response.json();}).then(function(jsonResult){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResult));//TODO is there a better solution for this?\nif(jsonResult.status===\"RESUME\"){_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResult});}});}}).catch(function(e){console.error(\"handleAuthNflow exception:\",e);});break;case\"7\":// Tab 7 is newly created for mobile push sent/success.\nthis.toggleTab(tab);var polling=function polling(){_this3.PingAuthN.handleAuthNflow({flowResponse:cachedFlowResponse}).then(function(response){return response.json();}).then(function(jsonResponse){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResponse));if(jsonResponse.status===\"MFA_COMPLETED\"){_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResponse,body:\"\"}).then(function(response){return response.json();}).then(function(jsonResult){var success=_this3.Session.setAuthenticatedUserItem(\"flowResponse\",JSON.stringify(jsonResult));//TODO is there a better solution for this?\nif(jsonResult.status===\"RESUME\"){window.clearInterval(pollingID);_this3.PingAuthN.handleAuthNflow({flowResponse:jsonResult});}});}}).catch(function(e){console.error(\"handleAuthNflow exception:\",e);});};var pollingID=window.setInterval(polling,3000);break;case\"8\"://TODO  need implementation? Do we ever get here? or is this another case handled by PF UIs?\nbreak;}}}// Callback for P1 Risk profiling scripts.\n// When P1 Risk profiles the user's device, it will call this method passing the raw device profile.\n},{key:\"buildDeviceProfile\",value:function buildDeviceProfile(deviceComponents){var formattedProfile=window.transformComponentsToDeviceProfile(deviceComponents);this.deviceProfileString=JSON.stringify(formattedProfile);}},{key:\"componentDidMount\",value:function componentDidMount(){var rememberMe=this.Session.getCookie(\"rememberMe\");if(rememberMe.length){this.setState({rememberMe:true});}// Appending scripts for PingOne Risk device profiling.\ninjectExternalScript(\"/app/scripts/fingerprint2-2.1.4.min.js\");injectExternalScript(\"/app/scripts/pingone-risk-management-profiling.js\");}/* END PING INTEGRATION: */},{key:\"render\",value:function render(){var _this4=this;var closeBtn=/*#__PURE__*/React.createElement(\"div\",null);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{isOpen:this.state.isOpen,toggle:this.toggle.bind(this),onClosed:this.onClosed.bind(this),className:\"modal-login\"},/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(TabContent,{activeTab:this.state.activeTab},/*#__PURE__*/React.createElement(\"img\",{className:'modalHeroLogo',src:process.env.PUBLIC_URL+\"/images/logo.png\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(TabPane,{tabId:\"1\"},\" \",/*#__PURE__*/React.createElement(\"h4\",null,data.titles.welcome),this.state.loginError&&/*#__PURE__*/React.createElement(\"span\",{style:{color:'red'}},this.state.loginErrorMsg),\" \",/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(Label,{for:\"username\"},data.form.fields.username.label),/*#__PURE__*/React.createElement(TextField,{classes:{root:'dropDownTextField'},InputProps:{classes:{root:'inputRootDropDown',underline:'inputUnderlineDropDown',focused:'inputFocusedDropDown'}},InputLabelProps:{classes:{root:'trackingLabelDropDown',focused:'inputLabelFocusedDropDown'}},label:\"User Id\",variant:\"filled\"})),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(Label,{for:\"password\"},data.form.fields.password.label),/*#__PURE__*/React.createElement(TextField,{classes:{root:'dropDownTextField'},InputProps:{classes:{root:'inputRootDropDown',underline:'inputUnderlineDropDown',focused:'inputFocusedDropDown'}},InputLabelProps:{classes:{root:'trackingLabelDropDown',focused:'inputLabelFocusedDropDown'}},label:\"Password\",variant:\"filled\",type:\"password\",onChange:this.handlePswdChange.bind(this)})),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(CustomInput,{onChange:this.handleRememberMeChange.bind(this),type:\"checkbox\",id:\"remember\",label:data.form.fields.remember.label,checked:this.state.rememberMe})),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(ButtonMaterial,{classes:{root:'submitButtonModal',text:'submitButtonLabel'},onClick:function onClick(){_this4.handleSubmit(\"3\");},variant:\"text\"},data.form.buttons.next)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info pl-0\",onClick:function onClick(){_this4.toggleTab('4');}},data.form.buttons.reset)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info pl-0\",onClick:function onClick(){_this4.toggleTab('5');}},data.form.buttons.reset_password))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"2\"},\" \",/*#__PURE__*/React.createElement(\"h4\",null,data.titles.login_method),/*#__PURE__*/React.createElement(FormGroup,{className:this.state.loginMethodFormGroupClass},/*#__PURE__*/React.createElement(\"div\",null,this.deviceExists(\"iPhone\")&&/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"login_method_iPhone\",name:\"login_method\",label:data.form.fields.login_method.options.faceid,className:\"form-check-inline\",onClick:this.setLoginMethod.bind(this)}),this.deviceExists(\"SMS\")&&/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"login_method_SMS\",name:\"login_method\",label:data.form.fields.login_method.options.text,className:\"form-check-inline\",onClick:this.setLoginMethod.bind(this)}),this.deviceExists(\"Email\")&&/*#__PURE__*/React.createElement(CustomInput,{type:\"radio\",id:\"login_method_Email\",name:\"login_method\",label:data.form.fields.login_method.options.email,className:\"form-check-inline\",onClick:this.setLoginMethod.bind(this)}))),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-4 text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",disabled:this.state.loginMethodUnset,onClick:function onClick(){_this4.handleSubmit('3');}},data.form.buttons.login)),/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info\",onClick:this.toggle.bind(this)},data.form.buttons.help))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"3\"},\" \",\"Using \",this.state.loginMethod,\" at \",this.state.loginTarget,\".\",/*#__PURE__*/React.createElement(\"div\",{className:\"mobile-loading\",style:{backgroundImage:\"url(\".concat(process.env.PUBLIC_URL,\"/images/login-device-outline.jpg)\")}},/*#__PURE__*/React.createElement(\"div\",{className:\"spinner\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCircleNotch,size:\"3x\",className:\"fa-spin\"})),/*#__PURE__*/React.createElement(\"p\",null,data.mobile.loading)),this.state.loginMethod!==\"iPhone\"&&/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(Label,{for:\"otp\"},data.form.fields.otp.label),/*#__PURE__*/React.createElement(TextField,{classes:{root:'dropDownTextField'},InputProps:{classes:{root:'inputRootDropDown',underline:'inputUnderlineDropDown',focused:'inputFocusedDropDown'}},InputLabelProps:{classes:{root:'trackingLabelDropDown',focused:'inputLabelFocusedDropDown'}}// label={data.form.fields.username.placeholder}\n,label:data.form.fields.otp.placeholder,variant:\"filled\",value:this.state.otp,onChange:this.handleOTPChange.bind(this)})),this.state.loginMethod!==\"iPhone\"&&/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:function onClick(){_this4.handleSubmit('6');}},data.form.buttons.next),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-4 text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info\",onClick:this.toggle.bind(this)},data.form.buttons.help))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"4\"},/*#__PURE__*/React.createElement(\"h4\",null,data.form.buttons.recover_username),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(TextField,{classes:{root:'dropDownTextField'},InputProps:{classes:{root:'inputRootDropDown',underline:'inputUnderlineDropDown',focused:'inputFocusedDropDown'}},InputLabelProps:{classes:{root:'trackingLabelDropDown',focused:'inputLabelFocusedDropDown'}}// label={data.form.fields.username.placeholder}\n,label:data.form.fields.email.placeholder,variant:\"filled\",onChange:this.handleEmailChange.bind(this)})),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:function onClick(){_this4.handleSubmit('5');}},data.form.buttons.recover_username))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"5\"},/*#__PURE__*/React.createElement(\"h4\",null,data.form.buttons.recover_password),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group-light\"},/*#__PURE__*/React.createElement(TextField,{classes:{root:'dropDownTextField'},InputProps:{classes:{root:'inputRootDropDown',underline:'inputUnderlineDropDown',focused:'inputFocusedDropDown'}},InputLabelProps:{classes:{root:'trackingLabelDropDown',focused:'inputLabelFocusedDropDown'}}// label={data.form.fields.username.placeholder}\n,label:data.form.fields.email.placeholder,variant:\"filled\",onChange:this.handleEmailChange.bind(this)})),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:function onClick(){_this4.toggleTab('6');}},data.form.buttons.recover_password))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"6\"},/*#__PURE__*/React.createElement(\"h4\",null,data.titles.otp_success),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-4 text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info\",onClick:this.toggle.bind(this)},data.form.buttons.help))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"7\"},\" \",\"Using your \",this.state.deviceName?this.state.deviceName:this.state.loginMethod,\".\",/*#__PURE__*/React.createElement(\"h4\",{\"data-toggle\":\"tooltip\",title:\"See what we did there?\"},data.titles.mobile_success),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-4 text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"link\",size:\"sm\",className:\"text-info\",onClick:this.toggle.bind(this)},data.form.buttons.help))),/*#__PURE__*/React.createElement(TabPane,{tabId:\"8\"},\" \",/*#__PURE__*/React.createElement(\"h4\",null,data.titles.recover_username_success),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 text-center\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",color:\"primary\",onClick:function onClick(){_this4.toggleTab('1');}},data.form.buttons.login))))))));}}]);return ModalLoginPassword;}(React.Component);export default ModalLoginPassword;","map":null,"metadata":{},"sourceType":"module"}