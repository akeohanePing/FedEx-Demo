{"ast":null,"code":"var _jsxFileName = \"/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ModalLogin/ModalLogin.js\";\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n// Packages\nimport React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Input, CustomInput, TabContent, TabPane } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport ButtonMaterial from '@material-ui/core/Button'; // Styles\n\nimport \"./ModalLogin.scss\"; // Data\n\nimport data from './data.json';\nimport PingAuthN from '../Integration/PingAuthN';\n/* PING INTEGRATION */\n\nimport Session from '../Utils/Session';\n/* PING INTEGRATION: */\n\nimport ModalLoginPassword from '../ModalLoginPassword/ModalLoginPassword';\n/* PING INTEGRATION: */\n\nclass ModalLogin extends React.Component {\n  constructor() {\n    super();\n\n    this.deviceExists = type => {\n      let deviceFound = false;\n      const deviceListFlat = this.state.deviceList.flat();\n\n      if (deviceListFlat.indexOf(type) > -1) {\n        deviceFound = true;\n      }\n\n      return deviceFound;\n    };\n\n    this.state = {\n      isOpen: false,\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: '',\n      deviceRef: \"\",\n\n      /* PING INTEGRATION: Selected device's Id */\n      deviceName: \"\",\n\n      /* PING INTEGRATION: Device name if using mobile app. I.e. iPhone XS Max */\n      loginMethod: \"\",\n\n      /* PING INTEGRATION: SMS, Email, iPhone, TOTP */\n      loginTarget: \"\",\n\n      /* PING INTEGRATION: number or email of selected login method. */\n      deviceList: [],\n\n      /* PING INTEGRATION: */\n      otp: \"\",\n\n      /* PING INTEGRATION: */\n      userName: '',\n\n      /* PING INTEGRATION */\n      email: ''\n      /* PING INTEGRATION */\n\n    };\n    this.PingAuthN = new PingAuthN();\n    /* PING INTEGRATION: */\n\n    this.Session = new Session();\n    /* PING INTEGRATION: */\n  }\n  /* BEGIN PING INTEGRATION: */\n  // function as class property. // Note: Per reactjs.org this syntax is experimental and not standardized yet. (Stage 3 proposal).\n  //Used to update device selection tabPane based on user's list of paired devices.\n\n\n  /* END PING INTEGRATION: */\n  onClosed() {\n    this.setState({\n      activeTab: '1',\n      loginMethodUnset: true,\n      deviceRef: \"\",\n\n      /* PING INTEGRATION: */\n      loginMethod: \"\",\n\n      /* PING INTEGRATION: */\n      deviceList: [],\n\n      /* PING INTEGRATION: */\n      loginTarget: \"\",\n\n      /* PING INTEGRATION: */\n      loginMethodFormGroupClass: '' // Doubt we need this. See comment below on same var.\n\n    });\n  }\n\n  toggle(tab) {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n    /* BEGIN PING INTEGRATION: calling from NavbarMain upon return.\n    Can't call toggleTab or we'll end up in endless loop. */\n    //TODO better explanation needs to be here. WTF?\n\n    if (tab == '4') {\n      this.setState({\n        activeTab: tab\n      });\n    }\n    /* END PING INTEGRATION: */\n\n  }\n\n  toggleTab(tab) {\n    this.setState({\n      activeTab: tab\n    });\n  }\n\n  setLoginMethod(event) {\n    /* BEGIN PING INTEGRATION: had to make this kind of polymorphic due to a late feature add of the \"default device\" concept in P1MFA. */\n    let deviceSelection = \"\";\n    let deviceId = \"\";\n    let deviceRefIndex;\n    let target = \"\";\n    let name = \"\";\n    const deviceList = this.state.deviceList;\n\n    if (typeof event === \"string\") {\n      //This will be the defaulted device Id.\n      deviceId = event;\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceId);\n      });\n      deviceSelection = deviceList[deviceRefIndex][0];\n    } else {\n      //We got the selected device from the user in the device selection UI.\n      const delimiterPos = event.target.id.lastIndexOf(\"_\");\n      deviceSelection = event.target.id.substring(delimiterPos + 1);\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceSelection);\n      });\n      deviceId = deviceList[deviceRefIndex][1];\n    }\n\n    deviceRefIndex = deviceList.findIndex((element, index) => {\n      return element.includes(deviceSelection);\n    });\n    target = deviceList[deviceRefIndex][2];\n    name = deviceList[deviceRefIndex][3];\n    this.setState(previousState => {\n      //TODO not referencing previousState anymore. should get rid of this and just do standard setState instead of arrow function.\n      return {\n        deviceRef: deviceId,\n        loginTarget: target,\n        loginMethod: deviceSelection,\n        deviceName: name,\n        loginMethodUnset: false,\n        loginMethodFormGroupClass: 'form-group-light' //Doubt we need this. Was probably T3 placeholder since they didn't know how we would Implement Ping integration.\n\n      };\n    });\n    /* END PING INTEGRATION: */\n  } // BEGIN PING INTEGRATIONS\n\n\n  handleIDChange(event) {\n    // grabbing whatever the user is typing in the ID first form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({\n      userName: event.target.value.trim()\n    });\n  }\n\n  handleOTPChange(event) {\n    // grabbing whatever the user is typing in the OTP form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({\n      otp: event.target.value\n    });\n  }\n\n  handleEmailChange(event) {\n    //This is not used since PF is handling SSPR to demo Velocity templates.\n    // Keeping it here in case Velocity templates get nixed from demos.\n    // Grabbing whatever the user is typing in the email form as they type, and\n    // saving it to state.\n    this.setState({\n      email: event.target.value\n    });\n  } // When user clicks \"Next\".\n  // Handler for various TabPane UIs.\n  // TODO T3 used numeric IDs for the TabPanes in render(). With our handler, \n  // it would be easier to visually map in the code if they had text IDs related to the UI of the TabPane. I.e. \"IDF\", \"Devices\", etc.\n\n\n  handleSubmit(tab) {\n    //Need to parse this as JSON because the browser's sessionStorage object only stores strings.\n    const cachedFlowResponse = JSON.parse(this.Session.getAuthenticatedUserItem(\"flowResponse\"));\n\n    if (window.location.search) {\n      /* TODO what do we do if they submit with no querystring? Is that even possible? If not, do we even need the test for window.location.search??? */\n      let payload = \"\";\n\n      switch (tab) {\n        case \"1\":\n          // IDF form. This is the default state. Will probably never be called from here.\n          this.toggleTab(\"1\");\n          break;\n\n        case \"2\":\n          //Password modal or device selection. If password, we toggle to a new UI.\n          payload = this.state.userName;\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            body: payload\n          }).then(response => response.json()).then(jsonResult => {\n            let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult));\n\n            if (jsonResult.status === \"USERNAME_PASSWORD_REQUIRED\") {\n              //Close ModalLogin. We need to get password.\n              this.toggle(); //swap modals for username/password modal.\n\n              this.refs.modalLoginPassword.toggle(this.state.userName);\n            } else if (jsonResult.status === \"AUTHENTICATION_REQUIRED\") {\n              this.PingAuthN.handleAuthNflow({\n                flowResponse: jsonResult,\n                body: \"\"\n              }).then(response => response.json()).then(jsonResponse => {\n                let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse)); // We always get back a list of devices whether they have a default or not.\n\n                let devices = jsonResponse.devices.map(device => {\n                  return [device.type, device.id, device.target, device.name];\n                });\n                this.setState({\n                  deviceList: devices\n                }); //Because we might have a default device in P1MFA.\n\n                if (jsonResponse.selectedDeviceRef) {\n                  this.setLoginMethod(jsonResponse.selectedDeviceRef.id);\n                }\n\n                if (jsonResponse.status === \"DEVICE_SELECTION_REQUIRED\") {\n                  this.toggleTab(tab); //If we're below here it's because the user has a default device in P1MFA.\n                } else if (jsonResponse.status === \"OTP_REQUIRED\") {\n                  this.toggleTab(\"3\");\n                } else {\n                  // This assumes their default device response was PUSH_CONFIRMATION_WAITING\n                  this.toggleTab(\"7\");\n                  this.handleSubmit(\"7\");\n                }\n              });\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNflow exception:\", e);\n          });\n          break;\n\n        case \"3\":\n          payload = this.state.deviceRef;\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            body: payload\n          }).then(response => response.json()).then(jsonResult => {\n            let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n            if (jsonResult.status === \"OTP_REQUIRED\") {\n              this.toggleTab(tab);\n            } else if (jsonResult.status === \"PUSH_CONFIRMATION_WAITING\") {\n              this.handleSubmit(\"7\");\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNflow exception:\", e);\n          });\n          break;\n\n        case \"4\":\n          //Tab 4 is forgot username, so send them to PF endpoint so we can demo Velocity templates.\n          window.location.assign(data.pfAcctRecoveryURI);\n          break;\n\n        case \"5\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          this.toggleTab(tab);\n          break;\n\n        case \"6\":\n          // Tab 6 is newly created for OTP submitted/success.\n          payload = this.state.otp;\n          this.toggleTab(tab);\n          this.PingAuthN.handleAuthNflow({\n            flowResponse: cachedFlowResponse,\n            body: payload\n          }).then(response => response.json()).then(jsonResponse => {\n            if (jsonResponse.status) {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n            }\n\n            if (jsonResponse.status === \"MFA_COMPLETED\") {\n              this.PingAuthN.handleAuthNflow({\n                flowResponse: jsonResponse,\n                body: \"\"\n              }).then(response => response.json()).then(jsonResult => {\n                let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n                if (jsonResult.status === \"RESUME\") {\n                  this.PingAuthN.handleAuthNflow({\n                    flowResponse: jsonResult\n                  });\n                }\n              });\n            } else {\n              console.log(\"DEBUG\", JSON.stringify(jsonResponse)); // User got the OTP wrong. Try again.\n\n              this.toggleTab(\"3\");\n            }\n          }).catch(e => {\n            console.error(\"handleAuthNflow exception:\", e);\n          });\n          break;\n\n        case \"7\":\n          // Tab 7 is newly created for mobile push sent/success.\n          this.toggleTab(tab);\n\n          const polling = () => {\n            this.PingAuthN.handleAuthNflow({\n              flowResponse: cachedFlowResponse\n            }).then(response => response.json()).then(jsonResponse => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n\n              if (jsonResponse.status === \"MFA_COMPLETED\") {\n                this.PingAuthN.handleAuthNflow({\n                  flowResponse: jsonResponse,\n                  body: \"\"\n                }).then(response => response.json()).then(jsonResult => {\n                  let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n\n                  if (jsonResult.status === \"RESUME\") {\n                    window.clearInterval(pollingID);\n                    this.PingAuthN.handleAuthNflow({\n                      flowResponse: jsonResult\n                    });\n                  }\n                });\n              }\n            }).catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          };\n\n          let pollingID = window.setInterval(polling, 3000);\n          break;\n      }\n    }\n  }\n\n  componentDidMount() {\n    const rememberMe = this.Session.getCookie(\"rememberMe\");\n\n    if (rememberMe.length) {\n      this.setState({\n        userName: rememberMe\n      });\n    }\n  } // END PING INTEGRATIONS\n\n\n  render() {\n    const closeBtn = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 22\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isOpen,\n      toggle: this.toggle.bind(this),\n      onClosed: this.onClosed.bind(this),\n      className: \"modal-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, data.titles.welcome), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }\n    }, data.form.fields.username.label), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleIDChange.bind(this),\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: data.form.fields.username.placeholder,\n      value: this.state.userName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonMaterial, {\n      classes: {\n        root: 'submitButtonModal',\n        text: 'submitButtonLabel'\n      },\n      onClick: () => {\n        this.handleSubmit('2');\n      },\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, data.form.buttons.next)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info pl-0\",\n      onClick: () => {\n        this.handleSubmit('4');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, data.form.buttons.reset), \" \", /*#__PURE__*/React.createElement(ButtonMaterial, {\n      classes: {\n        root: 'submitButtonModal',\n        text: 'submitButtonLabel'\n      },\n      onClick: () => {\n        this.handleSubmit('4');\n      },\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, data.form.buttons.reset))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 19\n      }\n    }, data.titles.login_method), /*#__PURE__*/React.createElement(FormGroup, {\n      className: this.state.loginMethodFormGroupClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, this.deviceExists(\"iPhone\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_iPhone\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.faceid,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 25\n      }\n    }), this.deviceExists(\"SMS\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_SMS\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.text,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 25\n      }\n    }), this.deviceExists(\"Email\") && /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"login_method_Email\",\n      name: \"login_method\",\n      label: data.form.fields.login_method.options.email,\n      className: \"form-check-inline\",\n      onClick: this.setLoginMethod.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonMaterial, {\n      classes: {\n        root: 'submitButtonModal',\n        text: 'submitButtonLabel'\n      },\n      onClick: () => {\n        this.handleSubmit(\"3\");\n      },\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, data.form.buttons.login)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help), /*#__PURE__*/React.createElement(ButtonMaterial, {\n      classes: {\n        root: 'submitButtonModal',\n        text: 'submitButtonLabel'\n      },\n      onClick: this.toggle.bind(this),\n      variant: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 17\n      }\n    }, \" \", \"Using \", this.state.loginMethod, \" at \", this.state.loginTarget, \".\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mobile-loading\",\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL}/images/login-device-outline.jpg)`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCircleNotch,\n      size: \"3x\",\n      className: \"fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }\n    }, data.mobile.loading)), this.state.loginMethod !== \"iPhone\" && /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"otp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 23\n      }\n    }, data.form.fields.otp.label), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleOTPChange.bind(this),\n      type: \"text\",\n      name: \"otp\",\n      id: \"otp\",\n      placeholder: data.form.fields.otp.placeholder,\n      value: this.state.otp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 23\n      }\n    })), this.state.loginMethod !== \"iPhone\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleSubmit('6');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }, data.form.buttons.next), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 19\n      }\n    }, data.form.buttons.recover_username), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"form-group-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }\n    }, data.form.fields.email.label), /*#__PURE__*/React.createElement(Input, {\n      onChange: this.handleEmailChange.bind(this),\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: data.form.fields.email.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleSubmit('5');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }\n    }, data.form.buttons.recover_username), \" \")), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    }, data.titles.recover_username_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-3 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleSubmit('1');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }\n    }, data.form.buttons.login))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    }, data.titles.otp_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, \" \", \"Using your \", this.state.deviceName ? this.state.deviceName : this.state.loginMethod, \".\", /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-toggle\": \"tooltip\",\n      title: \"See what we did there?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 19\n      }\n    }, data.titles.mobile_success), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"submitButtonModal\",\n      type: \"button\",\n      color: \"link\",\n      size: \"sm\",\n      className: \"text-info\",\n      onClick: this.toggle.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 21\n      }\n    }, data.form.buttons.help))))))), /*#__PURE__*/React.createElement(ModalLoginPassword, {\n      ref: \"modalLoginPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ModalLogin;","map":{"version":3,"sources":["/Users/andrewkeohane/Documents/fedex/BXFinance-Apps/bxfinance-scenario1/src/components/ModalLogin/ModalLogin.js"],"names":["React","Button","Modal","ModalHeader","ModalBody","FormGroup","Label","Input","CustomInput","TabContent","TabPane","FontAwesomeIcon","faCircleNotch","ButtonMaterial","data","PingAuthN","Session","ModalLoginPassword","ModalLogin","Component","constructor","deviceExists","type","deviceFound","deviceListFlat","state","deviceList","flat","indexOf","isOpen","activeTab","loginMethodUnset","loginMethodFormGroupClass","deviceRef","deviceName","loginMethod","loginTarget","otp","userName","email","onClosed","setState","toggle","tab","toggleTab","setLoginMethod","event","deviceSelection","deviceId","deviceRefIndex","target","name","findIndex","element","index","includes","delimiterPos","id","lastIndexOf","substring","previousState","handleIDChange","value","trim","handleOTPChange","handleEmailChange","handleSubmit","cachedFlowResponse","JSON","parse","getAuthenticatedUserItem","window","location","search","payload","handleAuthNflow","flowResponse","body","then","response","json","jsonResult","success","setAuthenticatedUserItem","stringify","status","refs","modalLoginPassword","jsonResponse","devices","map","device","selectedDeviceRef","catch","e","console","error","assign","pfAcctRecoveryURI","log","polling","clearInterval","pollingID","setInterval","componentDidMount","rememberMe","getCookie","length","render","closeBtn","bind","titles","welcome","form","fields","username","label","placeholder","root","text","buttons","next","reset","login_method","options","faceid","login","help","backgroundImage","process","env","PUBLIC_URL","mobile","loading","recover_username","recover_username_success","otp_success","mobile_success"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\n\n// Packages\nimport React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  FormGroup,\n  Label,\n  Input,\n  CustomInput,\n  TabContent, TabPane\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\n\nimport ButtonMaterial from '@material-ui/core/Button';\n\n// Styles\nimport \"./ModalLogin.scss\";\n\n// Data\nimport data from './data.json';\n\nimport PingAuthN from '../Integration/PingAuthN'; /* PING INTEGRATION */\nimport Session from '../Utils/Session'; /* PING INTEGRATION: */\nimport ModalLoginPassword from '../ModalLoginPassword/ModalLoginPassword'; /* PING INTEGRATION: */\n\nclass ModalLogin extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isOpen: false,\n      activeTab: '1',\n      loginMethodUnset: true,\n      loginMethodFormGroupClass: '',\n      deviceRef: \"\",          /* PING INTEGRATION: Selected device's Id */\n      deviceName: \"\",         /* PING INTEGRATION: Device name if using mobile app. I.e. iPhone XS Max */\n      loginMethod: \"\",        /* PING INTEGRATION: SMS, Email, iPhone, TOTP */\n      loginTarget: \"\",        /* PING INTEGRATION: number or email of selected login method. */\n      deviceList: [],         /* PING INTEGRATION: */\n      otp: \"\",                /* PING INTEGRATION: */\n      userName: '',           /* PING INTEGRATION */\n      email: ''              /* PING INTEGRATION */\n    };\n    this.PingAuthN = new PingAuthN();   /* PING INTEGRATION: */\n    this.Session = new Session();       /* PING INTEGRATION: */\n  }\n\n  /* BEGIN PING INTEGRATION: */\n  // function as class property. // Note: Per reactjs.org this syntax is experimental and not standardized yet. (Stage 3 proposal).\n  //Used to update device selection tabPane based on user's list of paired devices.\n  deviceExists = (type) => {\n    let deviceFound = false;\n    const deviceListFlat = this.state.deviceList.flat();\n\n    if (deviceListFlat.indexOf(type) > -1) {\n      deviceFound = true;\n    }\n\n    return deviceFound;\n  }\n  /* END PING INTEGRATION: */\n\n  onClosed() {\n    this.setState({\n      activeTab: '1',\n      loginMethodUnset: true,\n      deviceRef: \"\",          /* PING INTEGRATION: */\n      loginMethod: \"\",        /* PING INTEGRATION: */\n      deviceList: [],         /* PING INTEGRATION: */\n      loginTarget: \"\",        /* PING INTEGRATION: */\n      loginMethodFormGroupClass: '' // Doubt we need this. See comment below on same var.\n    });\n  }\n  toggle(tab) {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n    /* BEGIN PING INTEGRATION: calling from NavbarMain upon return.\n    Can't call toggleTab or we'll end up in endless loop. */\n    //TODO better explanation needs to be here. WTF?\n    if (tab == '4') {\n      this.setState({\n        activeTab: tab\n      });\n    }\n    /* END PING INTEGRATION: */\n  }\n  toggleTab(tab) {\n    this.setState({\n      activeTab: tab\n    });\n  }\n\n  setLoginMethod(event) {\n    /* BEGIN PING INTEGRATION: had to make this kind of polymorphic due to a late feature add of the \"default device\" concept in P1MFA. */\n    let deviceSelection = \"\";\n    let deviceId = \"\";\n    let deviceRefIndex;\n    let target = \"\";\n    let name = \"\";\n    const deviceList = this.state.deviceList;\n\n    if (typeof event === \"string\") { //This will be the defaulted device Id.\n      deviceId = event;\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceId);\n      });\n      deviceSelection = deviceList[deviceRefIndex][0];\n    } else { //We got the selected device from the user in the device selection UI.\n      const delimiterPos = event.target.id.lastIndexOf(\"_\");\n      deviceSelection = event.target.id.substring(delimiterPos + 1);\n      deviceRefIndex = deviceList.findIndex((element, index) => {\n        return element.includes(deviceSelection);\n      });\n      deviceId = deviceList[deviceRefIndex][1];\n    }\n\n    deviceRefIndex = deviceList.findIndex((element, index) => {\n      return element.includes(deviceSelection);\n    });\n    target = deviceList[deviceRefIndex][2];\n    name = deviceList[deviceRefIndex][3];\n\n    this.setState(previousState => {//TODO not referencing previousState anymore. should get rid of this and just do standard setState instead of arrow function.\n      return {\n        deviceRef: deviceId,\n        loginTarget: target,\n        loginMethod: deviceSelection,\n        deviceName: name,\n        loginMethodUnset: false,\n        loginMethodFormGroupClass: 'form-group-light' //Doubt we need this. Was probably T3 placeholder since they didn't know how we would Implement Ping integration.\n      }\n    });\n    /* END PING INTEGRATION: */\n  }\n\n  // BEGIN PING INTEGRATIONS\n  handleIDChange(event) {\n    // grabbing whatever the user is typing in the ID first form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({ userName: event.target.value.trim() });\n  }\n\n  handleOTPChange(event) {\n    // grabbing whatever the user is typing in the OTP form as they type, and\n    // saving it to state. (Controlled input).\n    this.setState({ otp: event.target.value });\n  }\n\n  handleEmailChange(event) {\n    //This is not used since PF is handling SSPR to demo Velocity templates.\n    // Keeping it here in case Velocity templates get nixed from demos.\n    // Grabbing whatever the user is typing in the email form as they type, and\n    // saving it to state.\n    this.setState({ email: event.target.value });\n  }\n\n  // When user clicks \"Next\".\n  // Handler for various TabPane UIs.\n  // TODO T3 used numeric IDs for the TabPanes in render(). With our handler, \n  // it would be easier to visually map in the code if they had text IDs related to the UI of the TabPane. I.e. \"IDF\", \"Devices\", etc.\n  handleSubmit(tab) {\n    //Need to parse this as JSON because the browser's sessionStorage object only stores strings.\n    const cachedFlowResponse = JSON.parse(this.Session.getAuthenticatedUserItem(\"flowResponse\"));\n\n    if (window.location.search) {/* TODO what do we do if they submit with no querystring? Is that even possible? If not, do we even need the test for window.location.search??? */\n      let payload = \"\";\n\n      switch (tab) {\n        case \"1\":\n          // IDF form. This is the default state. Will probably never be called from here.\n          this.toggleTab(\"1\");\n          break;\n        case \"2\":\n          //Password modal or device selection. If password, we toggle to a new UI.\n          payload = this.state.userName;\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, body: payload })\n            .then(response => response.json())\n            .then(jsonResult => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult));\n              if (jsonResult.status === \"USERNAME_PASSWORD_REQUIRED\") {\n                //Close ModalLogin. We need to get password.\n                this.toggle();\n                //swap modals for username/password modal.\n                this.refs.modalLoginPassword.toggle(this.state.userName);\n              } else if (jsonResult.status === \"AUTHENTICATION_REQUIRED\") {\n                this.PingAuthN.handleAuthNflow({ flowResponse: jsonResult, body: \"\" })\n                  .then(response => response.json())\n                  .then(jsonResponse => {\n                    let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n                    // We always get back a list of devices whether they have a default or not.\n                    let devices = jsonResponse.devices.map((device) => {\n                      return [device.type, device.id, device.target, device.name];\n                    });\n                    this.setState({ deviceList: devices });\n\n                    //Because we might have a default device in P1MFA.\n                    if (jsonResponse.selectedDeviceRef) {\n                      this.setLoginMethod(jsonResponse.selectedDeviceRef.id);\n                    }\n\n                    if (jsonResponse.status === \"DEVICE_SELECTION_REQUIRED\") {\n                      this.toggleTab(tab);\n                      //If we're below here it's because the user has a default device in P1MFA.\n                    } else if (jsonResponse.status === \"OTP_REQUIRED\") {\n                      this.toggleTab(\"3\");\n                    } else { // This assumes their default device response was PUSH_CONFIRMATION_WAITING\n                      this.toggleTab(\"7\");\n                      this.handleSubmit(\"7\");\n                    }\n                  });\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          break;\n        case \"3\":\n          payload = this.state.deviceRef;\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, body: payload })\n            .then(response => response.json())\n            .then(jsonResult => {\n              let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n              if (jsonResult.status === \"OTP_REQUIRED\") {\n                this.toggleTab(tab);\n              } else if (jsonResult.status === \"PUSH_CONFIRMATION_WAITING\") {\n                this.handleSubmit(\"7\");\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          break;\n        case \"4\":\n          //Tab 4 is forgot username, so send them to PF endpoint so we can demo Velocity templates.\n          window.location.assign(data.pfAcctRecoveryURI);\n          break;\n        case \"5\":\n          // We should never hit this case since PF is handling SSPR.\n          // Need implementation if we move SSPR to authN API.\n          this.toggleTab(tab);\n          break;\n        case \"6\":\n          // Tab 6 is newly created for OTP submitted/success.\n          payload = this.state.otp;\n          this.toggleTab(tab);\n          this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse, body: payload })\n            .then(response => response.json())\n            .then(jsonResponse => {\n              if (jsonResponse.status) {let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));}\n              if (jsonResponse.status === \"MFA_COMPLETED\") {\n                this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse, body: \"\" })\n                  .then(response => response.json())\n                  .then(jsonResult => {\n                    let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n                    if (jsonResult.status === \"RESUME\") {\n                      this.PingAuthN.handleAuthNflow({ flowResponse: jsonResult })\n                    }\n                  });\n              } else {\n                console.log(\"DEBUG\", JSON.stringify(jsonResponse));\n                // User got the OTP wrong. Try again.\n                this.toggleTab(\"3\");\n              }\n            })\n            .catch(e => {\n              console.error(\"handleAuthNflow exception:\", e);\n            });\n          break;\n        case \"7\":\n          // Tab 7 is newly created for mobile push sent/success.\n          this.toggleTab(tab);\n          const polling = () => {\n            this.PingAuthN.handleAuthNflow({ flowResponse: cachedFlowResponse })\n              .then(response => response.json())\n              .then(jsonResponse => {\n                let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResponse));\n                if (jsonResponse.status === \"MFA_COMPLETED\") {\n                  this.PingAuthN.handleAuthNflow({ flowResponse: jsonResponse, body: \"\" })\n                    .then(response => response.json())\n                    .then(jsonResult => {\n                      let success = this.Session.setAuthenticatedUserItem(\"flowResponse\", JSON.stringify(jsonResult)); //TODO is there a better solution for this?\n                      if (jsonResult.status === \"RESUME\") {\n                        window.clearInterval(pollingID);\n                        this.PingAuthN.handleAuthNflow({ flowResponse: jsonResult })\n                      }\n                    });\n                }\n              })\n              .catch(e => {\n                console.error(\"handleAuthNflow exception:\", e);\n              });\n          }\n          let pollingID = window.setInterval(polling, 3000);\n          break;\n      }\n    }\n  }\n\n  componentDidMount() {\n    const rememberMe = this.Session.getCookie(\"rememberMe\");\n    if (rememberMe.length) { this.setState({ userName: rememberMe }); }\n  }\n  // END PING INTEGRATIONS\n\n  render() {\n    const closeBtn = <div />;\n    return (\n      <div>\n        <Modal isOpen={this.state.isOpen} toggle={this.toggle.bind(this)} onClosed={this.onClosed.bind(this)} className=\"modal-login\">\n          {/* <ModalHeader toggle={this.toggle.bind(this)} close={closeBtn}><img src={process.env.PUBLIC_URL + \"/images/logo.png\"} alt=\"logo\" /></ModalHeader> */}\n          <ModalBody>\n            <form>\n              <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId=\"1\">{/* Identifier first */}\n                  <h4>{data.titles.welcome}</h4>\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"username\">{data.form.fields.username.label}</Label>\n                    <Input onChange={this.handleIDChange.bind(this)} type=\"text\" name=\"username\" id=\"username\" placeholder={data.form.fields.username.placeholder} value={this.state.userName} /> {/* PING INTEGRATION added onChange. */}\n                  </FormGroup>\n                  <FormGroup className=\"form-group-light\">\n                    {/* <CustomInput type=\"checkbox\" id=\"remember\" label={data.form.fields.remember.label} /> */}\n                  </FormGroup>\n                  <div className=\"mb-3\">\n                    {/* <Button className={\"submitButtonModal\"} type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('2'); }}>{data.form.buttons.next}</Button> PING INTEGRATION see onClick function. */}\n                    <ButtonMaterial\n                      classes={{\n                          root: 'submitButtonModal',\n                          text: 'submitButtonLabel'\n                      }}\n                      onClick={() => { this.handleSubmit('2'); }}\n                      variant=\"text\">\n                      {data.form.buttons.next}\n                  </ButtonMaterial>\n                  </div>\n                  <div>\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"link\" size=\"sm\" className=\"text-info pl-0\" onClick={() => { this.handleSubmit('4'); }}>{data.form.buttons.reset}</Button> {/* PING INTEGRATION: see onclick function. */}\n                    <ButtonMaterial\n                        classes={{\n                            root: 'submitButtonModal',\n                            text: 'submitButtonLabel'\n                        }}\n                        onClick={() => { this.handleSubmit('4'); }}\n                        variant=\"text\">\n                        {data.form.buttons.reset}\n                    </ButtonMaterial>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"2\">{/* Device/login selection. */}\n                  <h4>{data.titles.login_method}</h4>\n                  <FormGroup className={this.state.loginMethodFormGroupClass}>\n                    <div>{/* BEGIN PING INTEGRATION */}\n                      {this.deviceExists(\"iPhone\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_iPhone\" name=\"login_method\" label={data.form.fields.login_method.options.faceid} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                      {/* NOT SUPPORTING THIS FOR DEMOS {this.deviceExists(\"TOTP\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_TOTP\" name=\"login_method\" label={data.form.fields.login_method.options.totp} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />} */}\n                      {this.deviceExists(\"SMS\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_SMS\" name=\"login_method\" label={data.form.fields.login_method.options.text} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                      {this.deviceExists(\"Email\") &&\n                        <CustomInput type=\"radio\" id=\"login_method_Email\" name=\"login_method\" label={data.form.fields.login_method.options.email} className=\"form-check-inline\" onClick={this.setLoginMethod.bind(this)} />}\n                    </div>{/* END PING INTEGRATION */}\n                  </FormGroup>\n                  <div className=\"mb-4 text-center\">\n                    {/* <Button className={\"submitButtonModal\"} type=\"button\" color=\"primary\" disabled={this.state.loginMethodUnset} onClick={() => { this.handleSubmit(\"3\"); }}>{data.form.buttons.login}</Button> */}\n                    <ButtonMaterial\n                      classes={{\n                          root: 'submitButtonModal',\n                          text: 'submitButtonLabel'\n                      }}\n                      onClick={() => { this.handleSubmit(\"3\"); }}\n                      variant=\"text\">\n                      {data.form.buttons.login}\n                    </ButtonMaterial>\n                  </div>\n                  <div className=\"text-center\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                    <ButtonMaterial\n                      classes={{\n                          root: 'submitButtonModal',\n                          text: 'submitButtonLabel'\n                      }}\n                      onClick={this.toggle.bind(this)}\n                      variant=\"text\">\n                      {data.form.buttons.help}\n                    </ButtonMaterial>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"3\">{/* MFA sent, check phone msg. */} {/* TODO jump to here for default device if OTP_REQUIRED */}\n                Using {this.state.loginMethod} at {this.state.loginTarget}.\n                  <div className=\"mobile-loading\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/login-device-outline.jpg)` }}>\n                    <div className=\"spinner\">\n                      <FontAwesomeIcon icon={faCircleNotch} size=\"3x\" className=\"fa-spin\" />\n                    </div>\n                    <p>{data.mobile.loading}</p>\n                  </div>\n                  {/* BEGIN PING INTEGRATION: adding missing OTP entry text field. */}\n                  {this.state.loginMethod !== \"iPhone\" &&\n                    <FormGroup className=\"form-group-light\">\n                      <Label for=\"otp\">{data.form.fields.otp.label}</Label>\n                      <Input onChange={this.handleOTPChange.bind(this)} type=\"text\" name=\"otp\" id=\"otp\" placeholder={data.form.fields.otp.placeholder} value={this.state.otp} />\n                    </FormGroup>}\n                  {this.state.loginMethod !== \"iPhone\" &&\n                    <div className=\"mb-3\">\n                      <Button className={\"submitButtonModal\"} type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('6'); }}>{data.form.buttons.next}</Button> {/* PING INTEGRATION see onClick function. */}\n                    </div>}\n                  {/* END PING INTEGRATION */}\n                  <div className=\"mt-4 text-center\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"4\">{/* Recover userName. This is now handled by PF to demo Velocity templates. */}\n                  <h4>{data.form.buttons.recover_username}</h4>\n                  <FormGroup className=\"form-group-light\">\n                    <Label for=\"email\">{data.form.fields.email.label}</Label>\n                    <Input onChange={this.handleEmailChange.bind(this)} type=\"text\" name=\"email\" id=\"email\" placeholder={data.form.fields.email.placeholder} />\n                  </FormGroup>\n                  <div className=\"mb-3\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('5'); }}>{data.form.buttons.recover_username}</Button> {/* PING INTEGRATION: See onClick function. */}\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"5\">{/* Not using TabPane 5. SSPR handled by PF. May use in the future. */}\n                  <h4>{data.titles.recover_username_success}</h4>\n                  <div className=\"mb-3 text-center\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"primary\" onClick={() => { this.handleSubmit('1'); }}>{data.form.buttons.login}</Button>\n                  </div>\n                </TabPane>\n                {/* BEGIN PING INTEGRATION: added TabPanes for OTP submission and mobile push success. */}\n                <TabPane tabId=\"6\">{/* OTP sent. */}\n                  <h4>{data.titles.otp_success}</h4>\n                  <div className=\"mt-4 text-center\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                <TabPane tabId=\"7\">{/* Mobile app push sent. */} {/* TODO jump to here for default device if mobile PUSH_CONFIRMATION_WAITING */}\n                Using your {this.state.deviceName ? this.state.deviceName : this.state.loginMethod}.\n                  <h4 data-toggle=\"tooltip\" title=\"See what we did there?\">{data.titles.mobile_success}</h4>\n                  <div className=\"mt-4 text-center\">\n                    <Button className={\"submitButtonModal\"} type=\"button\" color=\"link\" size=\"sm\" className=\"text-info\" onClick={this.toggle.bind(this)}>{data.form.buttons.help}</Button>\n                  </div>\n                </TabPane>\n                {/* END PING INTEGRATION */}\n              </TabContent>\n            </form>\n          </ModalBody>\n        </Modal>\n        <ModalLoginPassword ref=\"modalLoginPassword\" />\n      </div>\n    );\n  }\n}\n\nexport default ModalLogin;\n"]},"metadata":{},"sourceType":"module"}